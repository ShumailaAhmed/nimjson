/* Generated by the Nim Compiler v0.20.0 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI3850 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI178245 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI9687 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI178202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI178206 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI178204 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI158015 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI178234 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI178231 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI178228 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3860 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI97832 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI100647 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3830 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3852 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3844 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3842 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3846 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI20156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3808 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3914 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3908 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3826 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3828 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3858 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3858 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3858.node = NNI3858;
var NNI3828 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3828.node = NNI3828;
NTI3908.base = NTI3826;
NTI3914.base = NTI3826;
var NNI3826 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3908, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3914, name: "up", sons: null}]};
NTI3826.node = NNI3826;
var NNI3808 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3808.node = NNI3808;
NTI3826.base = NTI3808;
NTI3828.base = NTI3826;
NTI3858.base = NTI3828;
var NNI20156 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI20156.node = NNI20156;
var NNI3846 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3846.node = NNI3846;
var NNI3842 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3842.node = NNI3842;
NTI3842.base = NTI3828;
NTI3846.base = NTI3842;
var NNI3844 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3844.node = NNI3844;
NTI3844.base = NTI3842;
var NNI3852 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3852.node = NNI3852;
var NNI3830 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3830.node = NNI3830;
NTI3830.base = NTI3826;
NTI3852.base = NTI3830;
var NNI3862 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3862.node = NNI3862;
NTI3862.base = NTI3828;
var NNI100647 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI97832, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI104, name: "b", sons: null}]};
NTI100647.node = NNI100647;
var NNI3860 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3860.node = NNI3860;
NTI3860.base = NTI3828;
var NNI178202 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI178202, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI178202, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI178202, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI178202, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI178202, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI178202, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI178202, name: "JArray", len: 0, sons: null}}};
NTI178202.node = NNI178202;
NTI178245.base = NTI178204;
var NNI178206 = {kind: 3, offset: "kind", len: 7, typ: NTI178202, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI138, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI9687, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI124, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI130, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI178228, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI178245, name: "elems", sons: null}]]};
NTI178206.node = NNI178206;
NTI178204.base = NTI178206;
var NNI178234 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI158015, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI138, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI178204, name: "Field3", sons: null}]};
NTI178234.node = NNI178234;
NTI178231.base = NTI178234;
var NNI178228 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI178231, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI104, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI104, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI104, name: "last", sons: null}]};
NTI178228.node = NNI178228;
var NNI3850 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3850.node = NNI3850;
NTI3850.base = NTI3828;

function makeNimstrLit(c_22258) {
		  var ln = c_22258.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_22258.charCodeAt(i);
  }
  return result;
  

	
}

function cstrToNimstr(c_22275) {
		  var ln = c_22275.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_22275.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_22275.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_23227, src_23228, ti_23229) {
	var result_23419 = null;

		switch (ti_23229.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_23201(ti_23229))) {
			result_23419 = src_23228;
			}
			else {
				result_23419 = [src_23228[0], src_23228[1]];
			}
			
			break;
		case 19:
			      if (dest_23227 === null || dest_23227 === undefined) {
        dest_23227 = {};
      }
      else {
        for (var key in dest_23227) { delete dest_23227[key]; }
      }
      for (var key in src_23228) { dest_23227[key] = src_23228[key]; }
      result_23419 = dest_23227;
    
			break;
		case 18:
		case 17:
			if (!((ti_23229.base == null))) {
			result_23419 = nimCopy(dest_23227, src_23228, ti_23229.base);
			}
			else {
			if ((ti_23229.kind == 17)) {
			result_23419 = (dest_23227 === null || dest_23227 === undefined) ? {m_type: ti_23229} : dest_23227;
			}
			else {
				result_23419 = (dest_23227 === null || dest_23227 === undefined) ? {} : dest_23227;
			}
			}
			nimCopyAux(result_23419, src_23228, ti_23229.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_23228 === null) {
        result_23419 = null;
      }
      else {
        if (dest_23227 === null || dest_23227 === undefined) {
          dest_23227 = new Array(src_23228.length);
        }
        else {
          dest_23227.length = src_23228.length;
        }
        result_23419 = dest_23227;
        for (var i = 0; i < src_23228.length; ++i) {
          result_23419[i] = nimCopy(result_23419[i], src_23228[i], ti_23229.base);
        }
      }
    
			break;
		case 28:
			      if (src_23228 !== null) {
        result_23419 = src_23228.slice(0);
      }
    
			break;
		default: 
			result_23419 = src_23228;
			break;
		}

	return result_23419;

}

function arrayConstr(len_23486, value_23487, typ_23488) {
		    var result = new Array(len_23486);
    for (var i = 0; i < len_23486; ++i) result[i] = nimCopy(null, value_23487, typ_23488);
    return result;
  

	
}

function toJSStr(s_22292) {
		  if (s_22292 === null) return "";
  var len = s_22292.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_22292[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_22292[i] < 128)
      asciiPart[i] = fcc(s_22292[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_20618, ename_20619) {
		e_20618.name = ename_20619;
		if ((excHandler == 0)) {
		unhandledException(e_20618);
		}
		
		e_20618.trace = nimCopy(null, raw_write_stack_trace_20468(), NTI138);
		throw e_20618;

	
}

function chckIndx(i_23505, a_23506, b_23507) {
			var Tmp1;

	var result_23508 = 0;

	BeforeRet: do {
			if (!(a_23506 <= i_23505)) Tmp1 = false; else {				Tmp1 = (i_23505 <= b_23507);			}		if (Tmp1) {
		result_23508 = i_23505;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_23505, a_23506, b_23507);
		}
		
	} while (false);

	return result_23508;

}

function mnewString(len_22309) {
		    return new Array(len_22309);
  

	
}

function addInt(a_22603, b_22604) {
		    var result = a_22603 + b_22604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function subInt(a_22621, b_22622) {
		    var result = a_22621 - b_22622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function divInt(a_22657, b_22658) {
		    if (b_22658 == 0) raiseDivByZero();
    if (b_22658 == -1 && a_22657 == 2147483647) raiseOverflow();
    return Math.trunc(a_22657 / b_22658);
  

	
}

function mulInt(a_22639, b_22640) {
		    var result = a_22639 * b_22640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet8 = setConstr([65, 90], [97, 122]);

function chckRange(i_23524, a_23525, b_23526) {
			var Tmp1;

	var result_23527 = 0;

	BeforeRet: do {
			if (!(a_23525 <= i_23524)) Tmp1 = false; else {				Tmp1 = (i_23524 <= b_23526);			}		if (Tmp1) {
		result_23527 = i_23524;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_23527;

}
var ConstSet9 = setConstr([97, 122]);
var ConstSet10 = setConstr(5);

function raiseFieldError(f_22043) {
		var e_22046 = null;
		e_22046 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22046.message = nimCopy(null, (f_22043 || []).concat(makeNimstrLit(" is not accessible") || []), NTI138);
		e_22046.parent = null;
		raiseException(e_22046, "FieldError");

	
}
var ConstSet11 = setConstr(6);
var ConstSet12 = setConstr(6);
var ConstSet13 = setConstr(6);
var ConstSet14 = setConstr(6);
var ConstSet15 = setConstr(6);

function eqStrings(a_22487, b_22488) {
		    if (a_22487 == b_22488) return true;
    if (a_22487 === null && b_22488.length == 0) return true;
    if (b_22488 === null && a_22487.length == 0) return true;
    if ((!a_22487) || (!b_22488)) return false;
    var alen = a_22487.length;
    if (alen != b_22488.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_22487[i] != b_22488[i]) return false;
    return true;
  

	
}
var ConstSet16 = setConstr(5);
var nim_program_result = 0;
var global_raise_hook_17618 = [null];
var local_raise_hook_17623 = [null];
var out_of_mem_hook_17626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var object_id_158237 = [0];

function is_fat_pointer_23201(ti_23203) {
	var result_23204 = false;

	BeforeRet: do {
		result_23204 = !((ConstSet1[ti_23203.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_23204;

}

function nimCopyAux(dest_23232, src_23233, n_23235) {
		switch (n_23235.kind) {
		case 0:
			break;
		case 1:
			      dest_23232[n_23235.offset] = nimCopy(dest_23232[n_23235.offset], src_23233[n_23235.offset], n_23235.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_23235.sons.length; i++) {
      nimCopyAux(dest_23232, src_23233, n_23235.sons[i]);
    }
    
			break;
		case 3:
			      dest_23232[n_23235.offset] = nimCopy(dest_23232[n_23235.offset], src_23233[n_23235.offset], n_23235.typ);
      for (var i = 0; i < n_23235.sons.length; ++i) {
        nimCopyAux(dest_23232, src_23233, n_23235.sons[i][1]);
      }
    
			break;
		}

	
}

function add_17638(x_17641, x_17641_Idx, y_17642) {
		      if (x_17641[x_17641_Idx] === null) { x_17641[x_17641_Idx] = []; }
      var off = x_17641[x_17641_Idx].length;
      x_17641[x_17641_Idx].length += y_17642.length;
      for (var i = 0; i < y_17642.length; ++i) {
        x_17641[x_17641_Idx][off+i] = y_17642.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_20151(f_20153) {
					var Tmp3;

	var result_20154 = [null];

		var it_20162 = f_20153;
		var i_20164 = 0;
		var total_20166 = 0;
		var temp_frames_20173 = arrayConstr(64, {Field0: null, Field1: 0}, NTI20156);
		L1: do {
				L2: while (true) {
					if (!!((it_20162 == null))) Tmp3 = false; else {						Tmp3 = (i_20164 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_20173[i_20164].Field0 = it_20162.procname;
					temp_frames_20173[i_20164].Field1 = it_20162.line;
					i_20164 += 1;
					total_20166 += 1;
					it_20162 = it_20162.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_20162 == null))) break L5;
					total_20166 += 1;
					it_20162 = it_20162.prev;
				}
		} while(false);
		result_20154[0] = nimCopy(null, [], NTI138);
		if (!((total_20166 == i_20164))) {
		if (result_20154[0] != null) { result_20154[0] = (result_20154[0]).concat(makeNimstrLit("(")); } else { result_20154[0] = makeNimstrLit("("); };
		if (result_20154[0] != null) { result_20154[0] = (result_20154[0]).concat(cstrToNimstr(((total_20166 - i_20164))+"")); } else { result_20154[0] = cstrToNimstr(((total_20166 - i_20164))+"").slice(); };
		if (result_20154[0] != null) { result_20154[0] = (result_20154[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_20154[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_20421 = 0;
			var colontmp__205061 = 0;
			colontmp__205061 = (i_20164 - 1);
			var res_205066 = colontmp__205061;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_205066)) break L8;
						j_20421 = res_205066;
						add_17638(result_20154, 0, temp_frames_20173[j_20421].Field0);
						if ((0 < temp_frames_20173[j_20421].Field1)) {
						if (result_20154[0] != null) { result_20154[0] = (result_20154[0]).concat(makeNimstrLit(", line: ")); } else { result_20154[0] = makeNimstrLit(", line: "); };
						if (result_20154[0] != null) { result_20154[0] = (result_20154[0]).concat(cstrToNimstr((temp_frames_20173[j_20421].Field1)+"")); } else { result_20154[0] = cstrToNimstr((temp_frames_20173[j_20421].Field1)+"").slice(); };
						}
						
						if (result_20154[0] != null) { result_20154[0] = (result_20154[0]).concat(makeNimstrLit("\x0A")); } else { result_20154[0] = makeNimstrLit("\x0A"); };
						res_205066 -= 1;
					}
			} while(false);
		} while(false);

	return result_20154[0];

}

function raw_write_stack_trace_20468() {
	var result_20470 = null;

		if (!((framePtr == null))) {
		result_20470 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_20151(framePtr) || []), NTI138);
		}
		else {
			result_20470 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_20470;

}

function unhandledException(e_20529) {
		var buf_20530 = [[]];
		if (!(((e_20529.message != null ? e_20529.message.length : 0) == 0))) {
		if (buf_20530[0] != null) { buf_20530[0] = (buf_20530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_20530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_20530[0] != null) { buf_20530[0] = (buf_20530[0]).concat(e_20529.message); } else { buf_20530[0] = e_20529.message.slice(); };
		}
		else {
		if (buf_20530[0] != null) { buf_20530[0] = (buf_20530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_20530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_20530[0] != null) { buf_20530[0] = (buf_20530[0]).concat(makeNimstrLit(" [")); } else { buf_20530[0] = makeNimstrLit(" ["); };
		add_17638(buf_20530, 0, e_20529.name);
		if (buf_20530[0] != null) { buf_20530[0] = (buf_20530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_20530[0] = makeNimstrLit("]\x0A"); };
		if (buf_20530[0] != null) { buf_20530[0] = (buf_20530[0]).concat(raw_write_stack_trace_20468()); } else { buf_20530[0] = raw_write_stack_trace_20468().slice(); };
		var cbuf_20601 = toJSStr(buf_20530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_20601);
  }
  else {
    throw cbuf_20601;
  }
  

	
}

function raiseIndexError(i_21643, a_21644, b_21645) {
		var e_21802 = null;
		e_21802 = {m_type: NTI3858, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_21802.message = nimCopy(null, (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_21643)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_21644)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_21645)+"") || []), NTI138);
		e_21802.parent = null;
		raiseException(e_21802, "IndexError");

	
}

function raiseOverflow() {
		var e_21046 = null;
		e_21046 = {m_type: NTI3846, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_21046.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_21046.parent = null;
		raiseException(e_21046, "OverflowError");

	
}

function raiseDivByZero() {
		var e_21245 = null;
		e_21245 = {m_type: NTI3844, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_21245.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
		e_21245.parent = null;
		raiseException(e_21245, "DivByZeroError");

	
}

function parse_saturated_natural_43631(s_43633, b_43635, b_43635_Idx, start_43636) {
			var Tmp1;
					var Tmp4;

	var result_43638 = 0;

	var F={procname:"parseutils.parseSaturatedNatural",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 480;
		var i_43639 = start_43636;
		if (((i_43639 < (s_43633 != null ? s_43633.length : 0)) && (s_43633[chckIndx(i_43639, 0, s_43633.length+0-1)-0] == 43))) {
		F.line = 481;
		i_43639 = addInt(i_43639, 1);
		}
		
			if (!(i_43639 < (s_43633 != null ? s_43633.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet6[s_43633[chckIndx(i_43639, 0, s_43633.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 483;
		b_43635[b_43635_Idx] = 0;
		L2: do {
			F.line = 484;
				L3: while (true) {
					if (!(i_43639 < (s_43633 != null ? s_43633.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet7[s_43633[chckIndx(i_43639, 0, s_43633.length+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					F.line = 485;
					var c_43668 = subInt(s_43633[chckIndx(i_43639, 0, s_43633.length+0-1)-0], 48);
					if ((b_43635[b_43635_Idx] <= divInt(subInt(2147483647, c_43668), 10))) {
					F.line = 487;
					b_43635[b_43635_Idx] = addInt(mulInt(b_43635[b_43635_Idx], 10), c_43668);
					}
					else {
						F.line = 489;
						b_43635[b_43635_Idx] = 2147483647;
					}
					
					F.line = 490;
					i_43639 = addInt(i_43639, 1);
					L5: do {
						F.line = 491;
							L6: while (true) {
							if (!((i_43639 < (s_43633 != null ? s_43633.length : 0)) && (s_43633[chckIndx(i_43639, 0, s_43633.length+0-1)-0] == 95))) break L6;
								F.line = 491;
								i_43639 = addInt(i_43639, 1);
							}
					} while(false);
				}
		} while(false);
		F.line = 492;
		result_43638 = subInt(i_43639, start_43636);
		}
		
	framePtr = F.prev;

	return result_43638;

}

function raiseRangeError() {
		var e_21445 = null;
		e_21445 = {m_type: NTI3862, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_21445.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_21445.parent = null;
		raiseException(e_21445, "RangeError");

	
}

function HEX5BHEX5D_100704(s_100708, x_100710) {
	var result_100711 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3855;
		var a_100801 = x_100710.a;
		F.line = 3856;
		var l_101001 = addInt(subInt(subInt((s_100708 != null ? s_100708.length : 0), x_100710.b), a_100801), 1);
		F.line = 3857;
		result_100711 = nimCopy(null, mnewString(chckRange(l_101001, 0, 2147483647)), NTI138);
		L1: do {
			F.line = 3858;
			var i_101009 = 0;
			F.line = 2648;
			var i_205082 = 0;
			L2: do {
				F.line = 2649;
					L3: while (true) {
					if (!(i_205082 < l_101001)) break L3;
						F.line = 3858;
						i_101009 = i_205082;
						F.line = 3858;
						result_100711[chckIndx(i_101009, 0, result_100711.length+0-1)-0] = s_100708[chckIndx(addInt(i_101009, a_100801), 0, s_100708.length+0-1)-0];
						F.line = 2651;
						i_205082 = addInt(i_205082, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_100711;

}

function HEX2EHEX2E_100639(a_100643, b_100644) {
	var result_100650 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
		F.line = 492;
		nimCopy(result_100650, {a: a_100643, b: b_100644}, NTI100647);
	framePtr = F.prev;

	return result_100650;

}

function parse_standard_format_specifier_201324(s_201326, start_201327, ignore_unknown_suffix_201329) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_201330 = {fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0};

	var F={procname:"strformat.parseStandardFormatSpecifier",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/strformat.nim",line:0};
	framePtr = F;
		F.line = 377;
		result_201330.fill = 32;
		F.line = 378;
		result_201330.align = 0;
		F.line = 379;
		result_201330.sign = 45;
		F.line = 380;
		var i_201333 = start_201327;
		if (((addInt(i_201333, 1) < (s_201326 != null ? s_201326.length : 0)) && (ConstSet2[s_201326[chckIndx(addInt(i_201333, 1), 0, s_201326.length+0-1)-0]] != undefined))) {
		F.line = 382;
		result_201330.fill = s_201326[chckIndx(i_201333, 0, s_201326.length+0-1)-0];
		F.line = 383;
		result_201330.align = s_201326[chckIndx(addInt(i_201333, 1), 0, s_201326.length+0-1)-0];
		F.line = 384;
		i_201333 = addInt(i_201333, 2);
		}
		else {
		if (((i_201333 < (s_201326 != null ? s_201326.length : 0)) && (ConstSet3[s_201326[chckIndx(i_201333, 0, s_201326.length+0-1)-0]] != undefined))) {
		F.line = 386;
		result_201330.align = s_201326[chckIndx(i_201333, 0, s_201326.length+0-1)-0];
		F.line = 387;
		i_201333 = addInt(i_201333, 1);
		}
		}
		if (((i_201333 < (s_201326 != null ? s_201326.length : 0)) && (ConstSet4[s_201326[chckIndx(i_201333, 0, s_201326.length+0-1)-0]] != undefined))) {
		F.line = 390;
		result_201330.sign = s_201326[chckIndx(i_201333, 0, s_201326.length+0-1)-0];
		F.line = 391;
		i_201333 = addInt(i_201333, 1);
		}
		
		if (((i_201333 < (s_201326 != null ? s_201326.length : 0)) && (s_201326[chckIndx(i_201333, 0, s_201326.length+0-1)-0] == 35))) {
		F.line = 394;
		result_201330.alternateForm = true;
		F.line = 395;
		i_201333 = addInt(i_201333, 1);
		}
		
			if (!((addInt(i_201333, 1) < (s_201326 != null ? s_201326.length : 0)) && (s_201326[chckIndx(i_201333, 0, s_201326.length+0-1)-0] == 48))) Tmp1 = false; else {				Tmp1 = (ConstSet5[s_201326[chckIndx(addInt(i_201333, 1), 0, s_201326.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 398;
		result_201330.padWithZero = true;
		F.line = 399;
		i_201333 = addInt(i_201333, 1);
		}
		
		F.line = 401;
		var parsed_length_201391 = parse_saturated_natural_43631(s_201326, result_201330, "minimumWidth", i_201333);
		F.line = 402;
		i_201333 = addInt(i_201333, parsed_length_201391);
		if (((i_201333 < (s_201326 != null ? s_201326.length : 0)) && (s_201326[chckIndx(i_201333, 0, s_201326.length+0-1)-0] == 46))) {
		F.line = 404;
		i_201333 = addInt(i_201333, 1);
		F.line = 405;
		var parsed_length_b_201405 = parse_saturated_natural_43631(s_201326, result_201330, "precision", i_201333);
		F.line = 406;
		i_201333 = addInt(i_201333, parsed_length_b_201405);
		}
		else {
			F.line = 408;
			result_201330.precision = -1;
		}
		
			if (!(i_201333 < (s_201326 != null ? s_201326.length : 0))) Tmp2 = false; else {				Tmp2 = (ConstSet8[s_201326[chckIndx(i_201333, 0, s_201326.length+0-1)-0]] != undefined);			}		if (Tmp2) {
		F.line = 411;
		result_201330.typ = s_201326[chckIndx(i_201333, 0, s_201326.length+0-1)-0];
		F.line = 412;
		i_201333 = addInt(i_201333, 1);
		}
		
		F.line = 413;
		result_201330.endPosition = i_201333;
			if (!!((i_201333 == (s_201326 != null ? s_201326.length : 0)))) Tmp3 = false; else {				Tmp3 = !(ignore_unknown_suffix_201329);			}		if (Tmp3) {
		F.line = 3348;
		var e_201460 = null;
		F.line = 3351;
		e_201460 = {m_type: NTI3852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 416;
		e_201460.message = nimCopy(null, (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_100704(s_201326, HEX2EHEX2E_100639(i_201333, 1)) || []), NTI138);
		F.line = 3344;
		e_201460.parent = null;
		F.line = 415;
		raiseException(e_201460, "ValueError");
		}
		
	framePtr = F.prev;

	return result_201330;

}

function nucruneLen(s_65227) {
	var result_65228 = 0;

	var F={procname:"unicode.runeLen",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/unicode.nim",line:0};
	framePtr = F;
		F.line = 49;
		var i_65230 = 0;
		L1: do {
			F.line = 50;
				L2: while (true) {
				if (!(i_65230 < (s_65227 != null ? s_65227.length : 0))) break L2;
					if ((s_65227[chckIndx(i_65230, 0, s_65227.length+0-1)-0] <= 127)) {
					F.line = 51;
					i_65230 = addInt(i_65230, 1);
					}
					else {
					if ((((s_65227[chckIndx(i_65230, 0, s_65227.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					F.line = 52;
					i_65230 = addInt(i_65230, 2);
					}
					else {
					if ((((s_65227[chckIndx(i_65230, 0, s_65227.length+0-1)-0] >>> 0) >>> 4) == 14)) {
					F.line = 53;
					i_65230 = addInt(i_65230, 3);
					}
					else {
					if ((((s_65227[chckIndx(i_65230, 0, s_65227.length+0-1)-0] >>> 0) >>> 3) == 30)) {
					F.line = 54;
					i_65230 = addInt(i_65230, 4);
					}
					else {
					if ((((s_65227[chckIndx(i_65230, 0, s_65227.length+0-1)-0] >>> 0) >>> 2) == 62)) {
					F.line = 55;
					i_65230 = addInt(i_65230, 5);
					}
					else {
					if ((((s_65227[chckIndx(i_65230, 0, s_65227.length+0-1)-0] >>> 0) >>> 1) == 126)) {
					F.line = 56;
					i_65230 = addInt(i_65230, 6);
					}
					else {
						F.line = 57;
					i_65230 = addInt(i_65230, 1);
					}
					}}}}}
					F.line = 58;
					result_65228 = addInt(result_65228, 1);
				}
		} while(false);
	framePtr = F.prev;

	return result_65228;

}

function rune_len_at_65359(s_65361, i_65362) {
	var result_65363 = 0;

	var F={procname:"unicode.runeLenAt",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/unicode.nim",line:0};
	framePtr = F;
		if ((s_65361[chckIndx(i_65362, 0, s_65361.length+0-1)-0] <= 127)) {
		F.line = 70;
		result_65363 = 1;
		}
		else {
		if ((((s_65361[chckIndx(i_65362, 0, s_65361.length+0-1)-0] >>> 0) >>> 5) == 6)) {
		F.line = 71;
		result_65363 = 2;
		}
		else {
		if ((((s_65361[chckIndx(i_65362, 0, s_65361.length+0-1)-0] >>> 0) >>> 4) == 14)) {
		F.line = 72;
		result_65363 = 3;
		}
		else {
		if ((((s_65361[chckIndx(i_65362, 0, s_65361.length+0-1)-0] >>> 0) >>> 3) == 30)) {
		F.line = 73;
		result_65363 = 4;
		}
		else {
		if ((((s_65361[chckIndx(i_65362, 0, s_65361.length+0-1)-0] >>> 0) >>> 2) == 62)) {
		F.line = 74;
		result_65363 = 5;
		}
		else {
		if ((((s_65361[chckIndx(i_65362, 0, s_65361.length+0-1)-0] >>> 0) >>> 1) == 126)) {
		F.line = 75;
		result_65363 = 6;
		}
		else {
			F.line = 76;
			result_65363 = 1;
		}
		}}}}}
	framePtr = F.prev;

	return result_65363;

}

function rune_offset_71044(s_71046, pos_71047, start_71048) {
	var result_71049 = 0;

	var F={procname:"unicode.runeOffset",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/unicode.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 327;
		var i_71051 = 0;
		F.line = 328;
		var o_71052 = start_71048;
		L1: do {
			F.line = 329;
				L2: while (true) {
				if (!(i_71051 < pos_71047)) break L2;
					F.line = 330;
					o_71052 = addInt(o_71052, chckRange(rune_len_at_65359(s_71046, o_71052), 0, 2147483647));
					if (((s_71046 != null ? s_71046.length : 0) <= o_71052)) {
					F.line = 332;
					result_71049 = -1;
					break BeforeRet;
					}
					
					F.line = 333;
					i_71051 = addInt(i_71051, 1);
				}
		} while(false);
		F.line = 334;
		result_71049 = o_71052;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_71049;

}

function validate_utf8_68229(s_68231) {
						var Tmp3;
						var Tmp4;
						var Tmp5;
						var Tmp6;
						var Tmp7;
						var Tmp8;

	var result_68232 = 0;

	var F={procname:"unicode.validateUTF8",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/unicode.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 180;
		var i_68234 = 0;
		F.line = 181;
		var l_68235 = (s_68231 != null ? s_68231.length : 0);
		L1: do {
			F.line = 182;
				L2: while (true) {
				if (!(i_68234 < l_68235)) break L2;
					if ((s_68231[chckIndx(i_68234, 0, s_68231.length+0-1)-0] <= 127)) {
					F.line = 184;
					i_68234 = addInt(i_68234, 1);
					}
					else {
					if ((((s_68231[chckIndx(i_68234, 0, s_68231.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					if ((s_68231[chckIndx(i_68234, 0, s_68231.length+0-1)-0] < 194)) {
					F.line = 186;
					result_68232 = i_68234;
					break BeforeRet;
					}
					
						if (!(addInt(i_68234, 1) < l_68235)) Tmp3 = false; else {							Tmp3 = (((s_68231[chckIndx(addInt(i_68234, 1), 0, s_68231.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp3) {
					F.line = 187;
					i_68234 = addInt(i_68234, 2);
					}
					else {
						F.line = 188;
						result_68232 = i_68234;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_68231[chckIndx(i_68234, 0, s_68231.length+0-1)-0] >>> 0) >>> 4) == 14)) {
						if (!(addInt(i_68234, 2) < l_68235)) Tmp5 = false; else {							Tmp5 = (((s_68231[chckIndx(addInt(i_68234, 1), 0, s_68231.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp5) Tmp4 = false; else {							Tmp4 = (((s_68231[chckIndx(addInt(i_68234, 2), 0, s_68231.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp4) {
					F.line = 191;
					i_68234 = addInt(i_68234, 3);
					}
					else {
						F.line = 192;
						result_68232 = i_68234;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_68231[chckIndx(i_68234, 0, s_68231.length+0-1)-0] >>> 0) >>> 3) == 30)) {
						if (!(addInt(i_68234, 3) < l_68235)) Tmp8 = false; else {							Tmp8 = (((s_68231[chckIndx(addInt(i_68234, 1), 0, s_68231.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp8) Tmp7 = false; else {							Tmp7 = (((s_68231[chckIndx(addInt(i_68234, 2), 0, s_68231.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (((s_68231[chckIndx(addInt(i_68234, 3), 0, s_68231.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp6) {
					F.line = 197;
					i_68234 = addInt(i_68234, 4);
					}
					else {
						F.line = 198;
						result_68232 = i_68234;
						break BeforeRet;
					}
					
					}
					else {
						F.line = 200;
						result_68232 = i_68234;
						break BeforeRet;
					}
					}}}
				}
		} while(false);
		F.line = 201;
		result_68232 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_68232;

}

function nsuRepeatChar(c_151859, count_151860) {
	var result_151861 = null;

	var F={procname:"strutils.repeat",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		F.line = 1290;
		result_151861 = nimCopy(null, mnewString(count_151860), NTI138);
		L1: do {
			F.line = 1291;
			var i_151870 = 0;
			F.line = 2610;
			var colontmp__205114 = 0;
			F.line = 1291;
			colontmp__205114 = subInt(count_151860, 1);
			F.line = 2620;
			var res_205115 = 0;
			L2: do {
				F.line = 2621;
					L3: while (true) {
					if (!(res_205115 <= colontmp__205114)) break L3;
						F.line = 1291;
						i_151870 = res_205115;
						F.line = 1291;
						result_151861[chckIndx(i_151870, 0, result_151861.length+0-1)-0] = c_151859;
						F.line = 2623;
						res_205115 = addInt(res_205115, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_151861;

}

function align_string_201223(s_201225, minimum_width_201226, align_201227, fill_201228) {
			var Tmp1;

	var result_201229 = null;

	var F={procname:"strformat.alignString",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/strformat.nim",line:0};
	framePtr = F;
		if ((minimum_width_201226 == 0)) {
		F.line = 281;
		result_201229 = nimCopy(null, s_201225, NTI138);
		}
		else {
			F.line = 283;
			if ((validate_utf8_68229(s_201225) == -1)) {
			Tmp1 = nucruneLen(s_201225);
			}
			else {
			Tmp1 = (s_201225 != null ? s_201225.length : 0);
			}
			
			var s_rune_len_201231 = Tmp1;
			F.line = 284;
			var to_fill_201232 = subInt(minimum_width_201226, s_rune_len_201231);
			if ((to_fill_201232 <= 0)) {
			F.line = 286;
			result_201229 = nimCopy(null, s_201225, NTI138);
			}
			else {
			if (((align_201227 == 60) || (align_201227 == 0))) {
			F.line = 288;
			result_201229 = nimCopy(null, (s_201225 || []).concat(nsuRepeatChar(fill_201228, chckRange(to_fill_201232, 0, 2147483647)) || []), NTI138);
			}
			else {
			if ((align_201227 == 94)) {
			F.line = 290;
			var half_201233 = divInt(to_fill_201232, 2);
			F.line = 291;
			result_201229 = nimCopy(null, (nsuRepeatChar(fill_201228, chckRange(half_201233, 0, 2147483647)) || []).concat(s_201225 || [],nsuRepeatChar(fill_201228, chckRange(subInt(to_fill_201232, half_201233), 0, 2147483647)) || []), NTI138);
			}
			else {
				F.line = 293;
				result_201229 = nimCopy(null, (nsuRepeatChar(fill_201228, chckRange(to_fill_201232, 0, 2147483647)) || []).concat(s_201225 || []), NTI138);
			}
			}}
		}
		
	framePtr = F.prev;

	return result_201229;

}

function format_value_201691(result_201694, result_201694_Idx, value_201695, specifier_201696) {
	var F={procname:"strformat.formatValue",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/strformat.nim",line:0};
	framePtr = F;
		F.line = 499;
		var spec_201697 = parse_standard_format_specifier_201324(specifier_201696, 0, false);
		F.line = 500;
		var value_201698 = nimCopy(null, value_201695, NTI138);
		F.line = 501;
		switch (spec_201697.typ) {
		case 115:
		case 0:
			break;
		default: 
			F.line = 3348;
			var e_201701 = null;
			F.line = 3351;
			e_201701 = {m_type: NTI3852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 505;
			e_201701.message = nimCopy(null, (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_201697.typ]), NTI138);
			F.line = 3344;
			e_201701.parent = null;
			F.line = 504;
			raiseException(e_201701, "ValueError");
			break;
		}
		if (!((spec_201697.precision == -1))) {
		if ((spec_201697.precision < nucruneLen(value_201698))) {
		F.line = 509;
		(value_201698 == null ? value_201698 = mnewString(chckRange(rune_offset_71044(value_201698, chckRange(spec_201697.precision, 0, 2147483647), 0), 0, 2147483647)) : value_201698.length = chckRange(rune_offset_71044(value_201698, chckRange(spec_201697.precision, 0, 2147483647), 0), 0, 2147483647));
		}
		
		}
		
		F.line = 510;
		if (result_201694[result_201694_Idx] != null) { result_201694[result_201694_Idx] = (result_201694[result_201694_Idx]).concat(align_string_201223(value_201698, spec_201697.minimumWidth, spec_201697.align, spec_201697.fill)); } else { result_201694[result_201694_Idx] = align_string_201223(value_201698, spec_201697.minimumWidth, spec_201697.align, spec_201697.fill).slice(); };
	framePtr = F.prev;

	
}

function nsuToUpperAsciiChar(c_147862) {
	var result_147863 = 0;

	var F={procname:"strutils.toUpperAscii",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet9[c_147862] != undefined)) {
		F.line = 261;
		result_147863 = chckRange(subInt(c_147862, 32), 0, 255);
		}
		else {
			F.line = 263;
			result_147863 = c_147862;
		}
		
	framePtr = F.prev;

	return result_147863;

}

function head_upper_204022(str_204024) {
	var result_204025 = null;

	var F={procname:"nimjson.headUpper",prev:framePtr,filename:"/home/jiro4989/src/github.com/jiro4989/nimjson/src/nimjsonpkg/util.nim",line:0};
	framePtr = F;
		F.line = 28;
		result_204025 = nimCopy(null, [nsuToUpperAsciiChar(str_204024[chckIndx(0, 0, str_204024.length+0-1)-0])].concat(HEX5BHEX5D_100704(str_204024, HEX2EHEX2E_100639(1, 1)) || []), NTI138);
	framePtr = F.prev;

	return result_204025;

}

function len_185165(t_185170) {
	var result_185171 = 0;

	var F={procname:"len.len",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 1473;
		result_185171 = t_185170.counter;
	framePtr = F.prev;

	return result_185171;

}

function is_filled_162418(hcode_162420) {
	var result_162421 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/hashcommon.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_162421 = !((hcode_162420 == 0));
	framePtr = F.prev;

	return result_162421;

}

function get_type_204074(key_204076, value_204077, strs_204080, strs_204080_Idx, index_204081) {
		var Tmp1;
				var Tmp2;
				var Tmp3;
			var Tmp4;
			var Tmp5;

	var result_204082 = null;

	var F={procname:"nimjson.getType",prev:framePtr,filename:"/home/jiro4989/src/github.com/jiro4989/nimjson/src/nimjsonpkg/util.nim",line:0};
	framePtr = F;
		F.line = 33;
		F.line = 37;
		switch (value_204077.kind) {
		case 6:
			F.line = 39;
			var u_key_204083 = head_upper_204022(key_204076);
			F.line = 40;
			var s_204084 = makeNimstrLit("seq[");
				var Tmp2 = value_204077;
				if (ConstSet11[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
			if ((0 < ((Tmp3 = Tmp2.elems, Tmp3) != null ? Tmp3.length : 0))) {
			F.line = 43;
			var Tmp4 = value_204077;
			if (ConstSet12[Tmp4.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
			var child_204094 = (Tmp5 = Tmp4.elems, Tmp5)[chckIndx(0, 0, Tmp5.length+0-1)-0];
			F.line = 44;
			if (s_204084 != null) { s_204084 = (s_204084).concat(get_type_204074(u_key_204083, child_204094, strs_204080, strs_204080_Idx, index_204081)); } else { s_204084 = get_type_204074(u_key_204083, child_204094, strs_204080, strs_204080_Idx, index_204081).slice(); };
			if ((child_204094.kind == 5)) {
			F.line = 46;
			obj_format_204001(child_204094, u_key_204083, strs_204080, strs_204080_Idx, addInt(index_204081, 1));
			}
			
			}
			else {
				F.line = 48;
			if (s_204084 != null) { s_204084 = (s_204084).concat(makeNimstrLit("JNull")); } else { s_204084 = makeNimstrLit("JNull"); };
			}
			
			F.line = 49;
			if (s_204084 != null) { s_204084 = (s_204084).concat(makeNimstrLit("]")); } else { s_204084 = makeNimstrLit("]"); };
			Tmp1 = s_204084;
			break;
		case 5:
			Tmp1 = head_upper_204022(key_204076);
			break;
		case 4:
			Tmp1 = makeNimstrLit("string");
			break;
		case 2:
			Tmp1 = makeNimstrLit("int64");
			break;
		case 3:
			Tmp1 = makeNimstrLit("float64");
			break;
		case 1:
			Tmp1 = makeNimstrLit("bool");
			break;
		case 0:
			Tmp1 = makeNimstrLit("JNull");
			break;
		}
		result_204082 = nimCopy(null, Tmp1, NTI138);
	framePtr = F.prev;

	return result_204082;

}

function sys_fatal_14062(message_14066) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/system/fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_14207 = null;
		F.line = 37;
		e_14207 = {m_type: NTI3850, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_14207.message = nimCopy(null, message_14066, NTI138);
		F.line = 39;
		raiseException(e_14207, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_14058(msg_14060) {
	var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/system/assertions.nim",line:0};
	framePtr = F;
		F.line = 20;
		sys_fatal_14062(msg_14060);
	framePtr = F.prev;

	
}

function failed_assert_impl_14255(msg_14257) {
	var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/system/assertions.nim",line:0};
	framePtr = F;
		F.line = 27;
		raise_assert_14058(msg_14257);
	framePtr = F.prev;

	
}

function obj_format_204001(self_204003, obj_name_204004, strs_204019, strs_204019_Idx, index_204020) {
			var Tmp2;

	var F={procname:"nimjson.objFormat",prev:framePtr,filename:"/home/jiro4989/src/github.com/jiro4989/nimjson/src/nimjsonpkg/util.nim",line:0};
	framePtr = F;
		F.line = 61;
		if (strs_204019[strs_204019_Idx] != null) { strs_204019[strs_204019_Idx].push([]); } else { strs_204019[strs_204019_Idx] = [[]]; };
		F.line = 62;
		F.line = 62;
		var fmt_res_204145 = [mnewString(0)];
		F.line = 62;
		if (fmt_res_204145[0] != null) { fmt_res_204145[0] = (fmt_res_204145[0]).concat(makeNimstrLit("  ")); } else { fmt_res_204145[0] = makeNimstrLit("  "); };
		F.line = 62;
		format_value_201691(fmt_res_204145, 0, head_upper_204022(obj_name_204004), []);
		F.line = 62;
		if (fmt_res_204145[0] != null) { fmt_res_204145[0] = (fmt_res_204145[0]).concat(makeNimstrLit(" = ref object\x0A")); } else { fmt_res_204145[0] = makeNimstrLit(" = ref object\x0A"); };
		if (strs_204019[strs_204019_Idx][chckIndx(index_204020, 0, strs_204019[strs_204019_Idx].length+0-1)-0] != null) { strs_204019[strs_204019_Idx][chckIndx(index_204020, 0, strs_204019[strs_204019_Idx].length+0-1)-0] = (strs_204019[strs_204019_Idx][chckIndx(index_204020, 0, strs_204019[strs_204019_Idx].length+0-1)-0]).concat(fmt_res_204145[0]); } else { strs_204019[strs_204019_Idx][chckIndx(index_204020, 0, strs_204019[strs_204019_Idx].length+0-1)-0] = fmt_res_204145[0].slice(); };
		L1: do {
			F.line = 63;
			var k_204160 = null;
			F.line = 63;
			var v_204161 = null;
			F.line = 1618;
			var colontmp__205046 = {data: null, counter: 0, first: 0, last: 0};
			F.line = 63;
			var Tmp2 = self_204003;
			if (ConstSet10[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
			nimCopy(colontmp__205046, Tmp2.fields, NTI178228);
			F.line = 1644;
			var l_205048 = len_185165(colontmp__205046);
			F.line = 1256;
			var h_205049 = colontmp__205046.first;
			L3: do {
				F.line = 1645;
					L4: while (true) {
					if (!(0 <= h_205049)) break L4;
						F.line = 1258;
						var nxt_205051 = colontmp__205046.data[chckIndx(h_205049, 0, colontmp__205046.data.length+0-1)-0].Field1;
						if (is_filled_162418(colontmp__205046.data[chckIndx(h_205049, 0, colontmp__205046.data.length+0-1)-0].Field0)) {
						F.line = 63;
						k_204160 = colontmp__205046.data[chckIndx(h_205049, 0, colontmp__205046.data.length+0-1)-0].Field2;
						F.line = 1646;
						v_204161 = colontmp__205046.data[chckIndx(h_205049, 0, colontmp__205046.data.length+0-1)-0].Field3;
						F.line = 64;
						var t_204162 = get_type_204074(k_204160, v_204161, strs_204019, strs_204019_Idx, index_204020);
						F.line = 65;
						F.line = 65;
						var fmt_res_204163 = [mnewString(0)];
						F.line = 65;
						if (fmt_res_204163[0] != null) { fmt_res_204163[0] = (fmt_res_204163[0]).concat(makeNimstrLit("    ")); } else { fmt_res_204163[0] = makeNimstrLit("    "); };
						F.line = 65;
						format_value_201691(fmt_res_204163, 0, k_204160, []);
						F.line = 65;
						if (fmt_res_204163[0] != null) { fmt_res_204163[0] = (fmt_res_204163[0]).concat(makeNimstrLit(": ")); } else { fmt_res_204163[0] = makeNimstrLit(": "); };
						F.line = 65;
						format_value_201691(fmt_res_204163, 0, t_204162, []);
						F.line = 65;
						if (fmt_res_204163[0] != null) { fmt_res_204163[0] = (fmt_res_204163[0]).concat(makeNimstrLit("\x0A")); } else { fmt_res_204163[0] = makeNimstrLit("\x0A"); };
						if (strs_204019[strs_204019_Idx][chckIndx(index_204020, 0, strs_204019[strs_204019_Idx].length+0-1)-0] != null) { strs_204019[strs_204019_Idx][chckIndx(index_204020, 0, strs_204019[strs_204019_Idx].length+0-1)-0] = (strs_204019[strs_204019_Idx][chckIndx(index_204020, 0, strs_204019[strs_204019_Idx].length+0-1)-0]).concat(fmt_res_204163[0]); } else { strs_204019[strs_204019_Idx][chckIndx(index_204020, 0, strs_204019[strs_204019_Idx].length+0-1)-0] = fmt_res_204163[0].slice(); };
						if ((v_204161.kind == 5)) {
						F.line = 69;
						obj_format_204001(v_204161, k_204160, strs_204019, strs_204019_Idx, addInt(index_204020, 1));
						}
						
						if (!((len_185165(colontmp__205046) == l_205048))) {
						F.line = 1647;
						failed_assert_impl_14255(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim(1647, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						F.line = 1260;
						h_205049 = nxt_205051;
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function nsuJoinSep(a_153059, sep_153060) {
	var result_153061 = null;

	var F={procname:"strutils.join",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((0 < (a_153059 != null ? a_153059.length : 0))) {
		F.line = 1766;
		var l_153072 = mulInt((sep_153060 != null ? sep_153060.length : 0), subInt((a_153059 != null ? a_153059.length : 0), 1));
		L1: do {
			F.line = 1767;
			var i_153086 = 0;
			F.line = 2610;
			var colontmp__205124 = 0;
			F.line = 1767;
			colontmp__205124 = (a_153059 != null ? (a_153059.length-1) : -1);
			F.line = 2620;
			var res_205125 = 0;
			L2: do {
				F.line = 2621;
					L3: while (true) {
					if (!(res_205125 <= colontmp__205124)) break L3;
						F.line = 1767;
						i_153086 = res_205125;
						F.line = 1767;
						l_153072 = addInt(l_153072, (a_153059[chckIndx(i_153086, 0, a_153059.length+0-1)-0] != null ? a_153059[chckIndx(i_153086, 0, a_153059.length+0-1)-0].length : 0));
						F.line = 2623;
						res_205125 = addInt(res_205125, 1);
					}
			} while(false);
		} while(false);
		F.line = 1768;
		result_153061 = nimCopy(null, mnewString(0), NTI138);
		F.line = 1769;
		if (result_153061 != null) { result_153061 = (result_153061).concat(a_153059[chckIndx(0, 0, a_153059.length+0-1)-0]); } else { result_153061 = a_153059[chckIndx(0, 0, a_153059.length+0-1)-0].slice(); };
		L4: do {
			F.line = 1770;
			var i_153106 = 0;
			F.line = 2610;
			var colontmp__205131 = 0;
			F.line = 1770;
			colontmp__205131 = (a_153059 != null ? (a_153059.length-1) : -1);
			F.line = 2620;
			var res_205132 = 1;
			L5: do {
				F.line = 2621;
					L6: while (true) {
					if (!(res_205132 <= colontmp__205131)) break L6;
						F.line = 1770;
						i_153106 = res_205132;
						F.line = 1771;
						if (result_153061 != null) { result_153061 = (result_153061).concat(sep_153060); } else { result_153061 = sep_153060.slice(); };
						F.line = 1772;
						if (result_153061 != null) { result_153061 = (result_153061).concat(a_153059[chckIndx(i_153106, 0, a_153059.length+0-1)-0]); } else { result_153061 = a_153059[chckIndx(i_153106, 0, a_153059.length+0-1)-0].slice(); };
						F.line = 2623;
						res_205132 = addInt(res_205132, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			F.line = 1774;
			result_153061 = nimCopy(null, [], NTI138);
		}
		
	framePtr = F.prev;

	return result_153061;

}

function to_type_string_204185(self_204187, obj_name_204188) {
				var Tmp1;
				var Tmp2;
			var Tmp3;
			var Tmp4;

	var result_204189 = null;

	var F={procname:"nimjson.toTypeString",prev:framePtr,filename:"/home/jiro4989/src/github.com/jiro4989/nimjson/src/nimjsonpkg/util.nim",line:0};
	framePtr = F;
		F.line = 98;
		if (result_204189 != null) { result_204189 = (result_204189).concat(makeNimstrLit("type\x0A")); } else { result_204189 = makeNimstrLit("type\x0A"); };
		F.line = 99;
		switch (self_204187.kind) {
		case 5:
			F.line = 101;
			var ret_204191 = [null];
			F.line = 102;
			obj_format_204001(self_204187, obj_name_204188, ret_204191, 0, 0);
			F.line = 103;
			if (result_204189 != null) { result_204189 = (result_204189).concat(nsuJoinSep(ret_204191[0], [])); } else { result_204189 = nsuJoinSep(ret_204191[0], []).slice(); };
			break;
		case 6:
			F.line = 105;
			F.line = 105;
			var fmt_res_204194 = [mnewString(0)];
			F.line = 105;
			if (fmt_res_204194[0] != null) { fmt_res_204194[0] = (fmt_res_204194[0]).concat(makeNimstrLit("Seq")); } else { fmt_res_204194[0] = makeNimstrLit("Seq"); };
			F.line = 105;
			format_value_201691(fmt_res_204194, 0, head_upper_204022(obj_name_204188), []);
			var seq_obj_name_204196 = nimCopy(null, fmt_res_204194[0], NTI138);
				var Tmp1 = self_204187;
				if (ConstSet13[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
			if ((0 < ((Tmp2 = Tmp1.elems, Tmp2) != null ? Tmp2.length : 0))) {
			F.line = 107;
			var Tmp3 = self_204187;
			if (ConstSet14[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
			var child_204206 = (Tmp4 = Tmp3.elems, Tmp4)[chckIndx(0, 0, Tmp4.length+0-1)-0];
			F.line = 108;
			switch (child_204206.kind) {
			case 5:
				F.line = 110;
				F.line = 110;
				var fmt_res_204207 = [mnewString(0)];
				F.line = 110;
				if (fmt_res_204207[0] != null) { fmt_res_204207[0] = (fmt_res_204207[0]).concat(makeNimstrLit("  ")); } else { fmt_res_204207[0] = makeNimstrLit("  "); };
				F.line = 110;
				format_value_201691(fmt_res_204207, 0, seq_obj_name_204196, []);
				F.line = 110;
				if (fmt_res_204207[0] != null) { fmt_res_204207[0] = (fmt_res_204207[0]).concat(makeNimstrLit(" = seq[")); } else { fmt_res_204207[0] = makeNimstrLit(" = seq["); };
				F.line = 110;
				format_value_201691(fmt_res_204207, 0, obj_name_204188, []);
				F.line = 110;
				if (fmt_res_204207[0] != null) { fmt_res_204207[0] = (fmt_res_204207[0]).concat(makeNimstrLit("]\x0A")); } else { fmt_res_204207[0] = makeNimstrLit("]\x0A"); };
				if (result_204189 != null) { result_204189 = (result_204189).concat(fmt_res_204207[0]); } else { result_204189 = fmt_res_204207[0].slice(); };
				F.line = 111;
				var ret_204211 = [null];
				F.line = 112;
				obj_format_204001(child_204206, obj_name_204188, ret_204211, 0, 0);
				F.line = 113;
				if (result_204189 != null) { result_204189 = (result_204189).concat(nsuJoinSep(ret_204211[0], [])); } else { result_204189 = nsuJoinSep(ret_204211[0], []).slice(); };
				break;
			default: 
				F.line = 115;
				var strs_204215 = [null];
				F.line = 116;
				var t_204217 = get_type_204074(obj_name_204188, child_204206, strs_204215, 0, 0);
				F.line = 117;
				F.line = 117;
				var fmt_res_204218 = [mnewString(0)];
				F.line = 117;
				if (fmt_res_204218[0] != null) { fmt_res_204218[0] = (fmt_res_204218[0]).concat(makeNimstrLit("  ")); } else { fmt_res_204218[0] = makeNimstrLit("  "); };
				F.line = 117;
				format_value_201691(fmt_res_204218, 0, obj_name_204188, []);
				F.line = 117;
				if (fmt_res_204218[0] != null) { fmt_res_204218[0] = (fmt_res_204218[0]).concat(makeNimstrLit(" = seq[")); } else { fmt_res_204218[0] = makeNimstrLit(" = seq["); };
				F.line = 117;
				format_value_201691(fmt_res_204218, 0, t_204217, []);
				F.line = 117;
				if (fmt_res_204218[0] != null) { fmt_res_204218[0] = (fmt_res_204218[0]).concat(makeNimstrLit("]\x0A")); } else { fmt_res_204218[0] = makeNimstrLit("]\x0A"); };
				if (result_204189 != null) { result_204189 = (result_204189).concat(fmt_res_204218[0]); } else { result_204189 = fmt_res_204218[0].slice(); };
				break;
			}
			}
			
			break;
		default: 
			break;
		}
	framePtr = F.prev;

	return result_204189;

}

function get_var_type_195909(x_195911) {
	var result_195912 = 0;

	var F={procname:"json.getVarType",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 871;
		result_195912 = 0;
		F.line = 874;
		switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_195911)))) {
		case "[object Array]":
			F.line = 875;
			result_195912 = 6;
			break BeforeRet;
			break;
		case "[object Object]":
			F.line = 876;
			result_195912 = 5;
			break BeforeRet;
			break;
		case "[object Number]":
			if ((x_195911 % 1.0000000000000000e+00 == 0.0)) {
			F.line = 879;
			result_195912 = 2;
			break BeforeRet;
			}
			else {
				F.line = 881;
				result_195912 = 3;
				break BeforeRet;
			}
			
			break;
		case "[object Boolean]":
			F.line = 882;
			result_195912 = 1;
			break BeforeRet;
			break;
		case "[object Null]":
			F.line = 883;
			result_195912 = 0;
			break BeforeRet;
			break;
		case "[object String]":
			F.line = 884;
			result_195912 = 4;
			break BeforeRet;
			break;
		default: 
			if (true) {
			F.line = 885;
			failed_assert_impl_14255(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim(885, 18) `false` "));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_195912;

}

function new_jarray_178451() {
	var result_178453 = null;

	var F={procname:"json.newJArray",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 219;
		result_178453 = {kind: 6, elems: [], str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}};
	framePtr = F.prev;

	return result_178453;

}

function len_196029(x_196031) {
	var result_196032 = 0;

	var F={procname:"json.len",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_195909(x_196031) == 6))) {
		F.line = 888;
		failed_assert_impl_14255(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim(888, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 889;
		      result_196032 = x_196031.length;
    
	framePtr = F.prev;

	return result_196032;

}

function add_178785(father_178787, child_178788) {
		var Tmp1;
		var Tmp2;

	var F={procname:"json.add",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		if (!((father_178787.kind == 6))) {
		F.line = 289;
		failed_assert_impl_14255(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim(289, 10) `father.kind == JArray` "));
		}
		
		F.line = 290;
		var Tmp1 = father_178787;
		if (ConstSet15[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
		if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_178788); } else { Tmp2 = [child_178788]; };
	framePtr = F.prev;

	
}

function HEX5BHEX5D_196414(x_196416, y_196417) {
	var result_196418 = {};

	var F={procname:"json.[]",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_195909(x_196416) == 6))) {
		F.line = 900;
		failed_assert_impl_14255(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim(900, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 901;
		      result_196418 = x_196416[y_196417];
    
	framePtr = F.prev;

	return result_196418;

}

function is_power_of_two_58062(x_58064) {
		var Tmp1;

	var result_58065 = false;

	BeforeRet: do {
		if (!(0 < x_58064)) Tmp1 = false; else {			Tmp1 = ((x_58064 & (x_58064 - 1)) == 0);		}		result_58065 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_58065;

}

function init_ordered_table_178383(initialsize_178387) {
	var result_178389 = {data: null, counter: 0, first: 0, last: 0};

	var F={procname:"initOrderedTable.initOrderedTable",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_58062(initialsize_178387))) {
		F.line = 118;
		failed_assert_impl_14255(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(initialsize)` "));
		}
		
		F.line = 119;
		result_178389.counter = 0;
		F.line = 1284;
		result_178389.data = new Array(chckRange(initialsize_178387, 0, 2147483647)); for (var i=0;i<chckRange(initialsize_178387, 0, 2147483647);++i) {result_178389.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 1285;
		result_178389.first = -1;
		F.line = 1286;
		result_178389.last = -1;
	framePtr = F.prev;

	return result_178389;

}

function new_jobject_178378() {
	var result_178380 = null;

	var F={procname:"json.newJObject",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 215;
		result_178380 = {kind: 5, fields: init_ordered_table_178383(4), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
	framePtr = F.prev;

	return result_178380;

}

function HEX21HEX26_158031(h_158033, val_158034) {
	var result_158035 = 0;

	var F={procname:"hashes.!&",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 63;
		var h_158036 = (h_158033 >>> 0);
		F.line = 64;
		var val_158037 = (val_158034 >>> 0);
		F.line = 65;
		var res_158043 = ((h_158036 + val_158037) >>> 0);
		F.line = 66;
		res_158043 = ((res_158043 + (res_158043 << 10)) >>> 0);
		F.line = 67;
		res_158043 = (res_158043 ^ ((res_158043 >>> 0) >>> 6));
		F.line = 68;
		result_158035 = (res_158043|0);
	framePtr = F.prev;

	return result_158035;

}

function hash_158869(x_158871) {
	var result_158872 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 141;
		result_158872 = x_158871;
	framePtr = F.prev;

	return result_158872;

}

function HEX21HEX24_158081(h_158083) {
	var result_158084 = 0;

	var F={procname:"hashes.!$",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 74;
		var h_158085 = (h_158083 >>> 0);
		F.line = 75;
		var res_158098 = ((h_158085 + (h_158085 << 3)) >>> 0);
		F.line = 76;
		res_158098 = (res_158098 ^ ((res_158098 >>> 0) >>> 11));
		F.line = 77;
		res_158098 = ((res_158098 + (res_158098 << 15)) >>> 0);
		F.line = 78;
		result_158084 = (res_158098|0);
	framePtr = F.prev;

	return result_158084;

}

function hash_158968(x_158970) {
	var result_158971 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 159;
		var element_size_158973 = 1;
		F.line = 160;
		var step_size_158974 = divInt(4, element_size_158973);
		F.line = 161;
		var i_158975 = 0;
		L1: do {
			F.line = 162;
				L2: while (true) {
				if (!(i_158975 <= subInt(addInt((x_158970 != null ? (x_158970.length-1) : -1), 1), step_size_158974))) break L2;
					F.line = 163;
					var n_158976 = 0;
					F.line = 169;
					n_158976 = x_158970[chckIndx(i_158975, 0, x_158970.length+0-1)-0];
					F.line = 170;
					result_158971 = HEX21HEX26_158031(result_158971, n_158976);
					F.line = 171;
					i_158975 = addInt(i_158975, step_size_158974);
				}
		} while(false);
		L3: do {
			F.line = 153;
			var i_159207 = 0;
			F.line = 2610;
			var colontmp__205160 = 0;
			F.line = 183;
			colontmp__205160 = (x_158970 != null ? (x_158970.length-1) : -1);
			F.line = 2620;
			var res_205161 = i_158975;
			L4: do {
				F.line = 2621;
					L5: while (true) {
					if (!(res_205161 <= colontmp__205160)) break L5;
						F.line = 153;
						i_159207 = res_205161;
						F.line = 154;
						result_158971 = HEX21HEX26_158031(result_158971, hash_158869(x_158970[chckIndx(i_159207, 0, x_158970.length+0-1)-0]));
						F.line = 2623;
						res_205161 = addInt(res_205161, 1);
					}
			} while(false);
		} while(false);
		F.line = 155;
		result_158971 = HEX21HEX24_158081(result_158971);
	framePtr = F.prev;

	return result_158971;

}

function next_try_162435(h_162437, max_hash_162438) {
	var result_162439 = 0;

	var F={procname:"tables.nextTry",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/hashcommon.nim",line:0};
	framePtr = F;
		F.line = 30;
		result_162439 = (addInt(h_162437, 1) & max_hash_162438);
	framePtr = F.prev;

	return result_162439;

}

function raw_get_179428(t_179433, key_179434, hc_179435, hc_179435_Idx) {
						var Tmp3;

	var result_179436 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_179435[hc_179435_Idx] = hash_158968(key_179434);
		if ((hc_179435[hc_179435_Idx] == 0)) {
		F.line = 56;
		hc_179435[hc_179435_Idx] = 314159265;
		}
		
		if (((t_179433.data != null ? t_179433.data.length : 0) == 0)) {
		F.line = 38;
		result_179436 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_179578 = (hc_179435[hc_179435_Idx] & (t_179433.data != null ? (t_179433.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_162418(t_179433.data[chckIndx(h_179578, 0, t_179433.data.length+0-1)-0].Field0)) break L2;
						if (!(t_179433.data[chckIndx(h_179578, 0, t_179433.data.length+0-1)-0].Field0 == hc_179435[hc_179435_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_179433.data[chckIndx(h_179578, 0, t_179433.data.length+0-1)-0].Field2, key_179434);						}					if (Tmp3) {
					F.line = 46;
					result_179436 = h_179578;
					break BeforeRet;
					}
					
					F.line = 47;
					h_179578 = next_try_162435(h_179578, (t_179433.data != null ? (t_179433.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_179436 = subInt(-1, h_179578);
	} while (false);
	framePtr = F.prev;

	return result_179436;

}

function must_rehash_162453(length_162455, counter_162456) {
	var result_162457 = false;

	var F={procname:"tables.mustRehash",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/hashcommon.nim",line:0};
	framePtr = F;
		if (!((counter_162456 < length_162455))) {
		F.line = 33;
		failed_assert_impl_14255(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/hashcommon.nim(33, 9) `length > counter` "));
		}
		
		F.line = 34;
		result_162457 = ((mulInt(length_162455, 2) < mulInt(counter_162456, 3)) || (subInt(length_162455, counter_162456) < 4));
	framePtr = F.prev;

	return result_162457;

}

function raw_insert_181672(t_181678, data_181681, data_181681_Idx, key_181682, val_181683, hc_181684, h_181685) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 22;
		data_181681[data_181681_Idx][chckIndx(h_181685, 0, data_181681[data_181681_Idx].length+0-1)-0].Field2 = nimCopy(null, key_181682, NTI138);
		F.line = 23;
		data_181681[data_181681_Idx][chckIndx(h_181685, 0, data_181681[data_181681_Idx].length+0-1)-0].Field3 = val_181683;
		F.line = 24;
		data_181681[data_181681_Idx][chckIndx(h_181685, 0, data_181681[data_181681_Idx].length+0-1)-0].Field0 = hc_181684;
		F.line = 1233;
		data_181681[data_181681_Idx][chckIndx(h_181685, 0, data_181681[data_181681_Idx].length+0-1)-0].Field1 = -1;
		if ((t_181678.first < 0)) {
		F.line = 1234;
		t_181678.first = h_181685;
		}
		
		if ((0 <= t_181678.last)) {
		F.line = 1235;
		data_181681[data_181681_Idx][chckIndx(t_181678.last, 0, data_181681[data_181681_Idx].length+0-1)-0].Field1 = h_181685;
		}
		
		F.line = 1236;
		t_181678.last = h_181685;
	framePtr = F.prev;

	
}

function enlarge_180574(t_180580) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 1239;
		var n_180588 = null;
		F.line = 1240;
		n_180588 = new Array(chckRange(mulInt((t_180580.data != null ? t_180580.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_180580.data != null ? t_180580.data.length : 0), 2), 0, 2147483647);++i) {n_180588[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 1241;
		var h_180727 = t_180580.first;
		F.line = 1242;
		t_180580.first = -1;
		F.line = 1243;
		t_180580.last = -1;
		F.line = 1244;
		var Tmp1 = t_180580.data; t_180580.data = n_180588; n_180588 = Tmp1;		L2: do {
			F.line = 1245;
				L3: while (true) {
				if (!(0 <= h_180727)) break L3;
					F.line = 1246;
					var nxt_180886 = n_180588[chckIndx(h_180727, 0, n_180588.length+0-1)-0].Field1;
					F.line = 1247;
					var eh_181035 = n_180588[chckIndx(h_180727, 0, n_180588.length+0-1)-0].Field0;
					if (is_filled_162418(eh_181035)) {
					F.line = 1249;
					var j_181042 = (eh_181035 & (t_180580.data != null ? (t_180580.data.length-1) : -1));
					L4: do {
						F.line = 1250;
							L5: while (true) {
							if (!is_filled_162418(t_180580.data[chckIndx(j_181042, 0, t_180580.data.length+0-1)-0].Field0)) break L5;
								F.line = 1251;
								j_181042 = next_try_162435(j_181042, (t_180580.data != null ? (t_180580.data.length-1) : -1));
							}
					} while(false);
					F.line = 1252;
					raw_insert_181672(t_180580, t_180580, "data", n_180588[chckIndx(h_180727, 0, n_180588.length+0-1)-0].Field2, n_180588[chckIndx(h_180727, 0, n_180588.length+0-1)-0].Field3, n_180588[chckIndx(h_180727, 0, n_180588.length+0-1)-0].Field0, j_181042);
					}
					
					F.line = 1253;
					h_180727 = nxt_180886;
				}
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_182489(t_182494, key_182495, hc_182496) {
	var result_182497 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((t_182494.data != null ? t_182494.data.length : 0) == 0)) {
		F.line = 38;
		result_182497 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_182636 = (hc_182496 & (t_182494.data != null ? (t_182494.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_162418(t_182494.data[chckIndx(h_182636, 0, t_182494.data.length+0-1)-0].Field0)) break L2;
					if (((t_182494.data[chckIndx(h_182636, 0, t_182494.data.length+0-1)-0].Field0 == hc_182496) && eqStrings(t_182494.data[chckIndx(h_182636, 0, t_182494.data.length+0-1)-0].Field2, key_182495))) {
					F.line = 46;
					result_182497 = h_182636;
					break BeforeRet;
					}
					
					F.line = 47;
					h_182636 = next_try_162435(h_182636, (t_182494.data != null ? (t_182494.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_182497 = subInt(-1, h_182636);
	} while (false);
	framePtr = F.prev;

	return result_182497;

}

function HEX5BHEX5DHEX3D_179111(t_179117, key_179118, val_179119) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		if (((t_179117.data != null ? t_179117.data.length : 0) == 0)) {
		if (!(is_power_of_two_58062(64))) {
		F.line = 118;
		failed_assert_impl_14255(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		F.line = 119;
		t_179117.counter = 0;
		F.line = 54;
		t_179117.data = new Array(64); for (var i=0;i<64;++i) {t_179117.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		}
		
		F.line = 55;
		var hc_179408 = [0];
		F.line = 56;
		var index_180046 = raw_get_179428(t_179117, key_179118, hc_179408, 0);
		if ((0 <= index_180046)) {
		F.line = 57;
		t_179117.data[chckIndx(index_180046, 0, t_179117.data.length+0-1)-0].Field3 = val_179119;
		}
		else {
			if (((t_179117.data != null ? t_179117.data.length : 0) == 0)) {
			if (!(is_power_of_two_58062(64))) {
			F.line = 118;
			failed_assert_impl_14255(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			F.line = 119;
			t_179117.counter = 0;
			F.line = 44;
			t_179117.data = new Array(64); for (var i=0;i<64;++i) {t_179117.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			}
			
			if (must_rehash_162453((t_179117.data != null ? t_179117.data.length : 0), t_179117.counter)) {
			F.line = 46;
			enlarge_180574(t_179117);
			F.line = 47;
			index_180046 = raw_get_known_hc_182489(t_179117, key_179118, hc_179408[0]);
			}
			
			F.line = 48;
			index_180046 = subInt(-1, index_180046);
			F.line = 49;
			raw_insert_181672(t_179117, t_179117, "data", key_179118, val_179119, hc_179408[0], index_180046);
			F.line = 58;
			t_179117.counter = addInt(t_179117.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_183614(obj_183616, key_183617, val_183618) {
		var Tmp1;

	var F={procname:"json.[]=",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		if (!((obj_183616.kind == 5))) {
		F.line = 363;
		failed_assert_impl_14255(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim(363, 9) `obj.kind == JObject` "));
		}
		
		F.line = 364;
		var Tmp1 = obj_183616;
		if (ConstSet16[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
		HEX5BHEX5DHEX3D_179111(Tmp1.fields, key_183617, val_183618);
	framePtr = F.prev;

	
}

function new_jint_178311(n_178313) {
	var result_178314 = null;

	var F={procname:"json.newJInt",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 199;
		result_178314 = {kind: 2, num: n_178313, str: null, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_178314;

}

function new_jfloat_178328(n_178330) {
	var result_178331 = null;

	var F={procname:"json.newJFloat",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 203;
		result_178331 = {kind: 3, fnum: n_178330, str: null, num: 0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_178331;

}

function new_jstring_178261(s_178263) {
	var result_178264 = null;

	var F={procname:"json.newJString",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 191;
		result_178264 = {kind: 4, str: nimCopy(null, s_178263, NTI138), num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_178264;

}

function new_jbool_178345(b_178347) {
	var result_178348 = null;

	var F={procname:"json.newJBool",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 207;
		result_178348 = {kind: 1, bval: b_178347, str: null, num: 0, fnum: 0.0, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_178348;

}

function new_jnull_178362() {
	var result_178364 = null;

	var F={procname:"json.newJNull",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 211;
		result_178364 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_178364;

}

function convert_object_196614(x_196616) {
	var result_196617 = null;

	var F={procname:"json.convertObject",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 906;
		switch (get_var_type_195909(x_196616)) {
		case 6:
			F.line = 908;
			result_196617 = new_jarray_178451();
			L1: do {
				F.line = 909;
				var i_196624 = 0;
				F.line = 2647;
				var colontmp__205138 = 0;
				F.line = 909;
				colontmp__205138 = len_196029(x_196616);
				F.line = 2648;
				var i_205139 = 0;
				L2: do {
					F.line = 2649;
						L3: while (true) {
						if (!(i_205139 < colontmp__205138)) break L3;
							F.line = 909;
							i_196624 = i_205139;
							F.line = 910;
							add_178785(result_196617, convert_object_196614(HEX5BHEX5D_196414(x_196616, i_196624)));
							F.line = 2651;
							i_205139 = addInt(i_205139, 1);
						}
				} while(false);
			} while(false);
			break;
		case 5:
			F.line = 912;
			result_196617 = new_jobject_178378();
			F.line = 913;
			for (var property in x_196616) {
        if (x_196616.hasOwnProperty(property)) {
      
			F.line = 916;
			var nim_property_196626 = null;
			F.line = 917;
			var nim_value_196627 = {};
			F.line = 918;
			nim_property_196626 = property; nim_value_196627 = x_196616[property];
			F.line = 919;
			HEX5BHEX5DHEX3D_183614(result_196617, cstrToNimstr(nim_property_196626), convert_object_196614(nim_value_196627));
			F.line = 920;
			}}
			break;
		case 2:
			F.line = 922;
			result_196617 = new_jint_178311(x_196616);
			break;
		case 3:
			F.line = 924;
			result_196617 = new_jfloat_178328(x_196616);
			break;
		case 4:
			F.line = 926;
			result_196617 = new_jstring_178261(cstrToNimstr(x_196616));
			break;
		case 1:
			F.line = 928;
			result_196617 = new_jbool_178345(x_196616);
			break;
		case 0:
			F.line = 930;
			result_196617 = new_jnull_178362();
			break;
		}
	framePtr = F.prev;

	return result_196617;

}

function parse_json_196656(buffer_196658) {
	var result_196659 = null;

	var F={procname:"json.parseJson",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 933;
		result_196659 = convert_object_196614(JSON.parse(toJSStr(buffer_196658)));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_196659;

}

function generateNimDefinitions(str_205029) {
	var result_205030 = null;

	var F={procname:"nimjson_js.generateNimDefinitions",prev:framePtr,filename:"/home/jiro4989/src/github.com/jiro4989/nimjson/src/nimjson_js.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 5;
		result_205030 = toJSStr(to_type_string_204185(parse_json_196656(cstrToNimstr(str_205029)), makeNimstrLit("Object")));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_205030;

}

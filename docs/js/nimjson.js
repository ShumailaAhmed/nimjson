/* Generated by the Nim Compiler v0.20.0 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI46650 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI221245 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI43032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI43026 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI52487 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI221202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI221206 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI221204 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI201015 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI221234 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI221231 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI221228 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI46660 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI140832 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI143647 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI46662 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46630 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46652 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46658 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI43006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI63156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI46608 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46714 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI43016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI43040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI43042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI46708 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI46626 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46628 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46646 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI46646 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46646.node = NNI46646;
var NNI46642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46642.node = NNI46642;
var NNI46628 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46628.node = NNI46628;
NTI46708.base = NTI46626;
NTI46714.base = NTI46626;
var NNI46626 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI46708, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI43042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI43040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI43040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI43016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI46714, name: "up", sons: null}]};
NTI46626.node = NNI46626;
var NNI46608 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46608.node = NNI46608;
NTI46626.base = NTI46608;
NTI46628.base = NTI46626;
NTI46642.base = NTI46628;
NTI46646.base = NTI46642;
var NNI63156 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI43042, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI43006, name: "Field1", sons: null}]};
NTI63156.node = NNI63156;
var NNI46658 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46658.node = NNI46658;
NTI46658.base = NTI46628;
var NNI46644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46644.node = NNI46644;
NTI46644.base = NTI46642;
var NNI46652 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46652.node = NNI46652;
var NNI46630 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46630.node = NNI46630;
NTI46630.base = NTI46626;
NTI46652.base = NTI46630;
var NNI46662 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46662.node = NNI46662;
NTI46662.base = NTI46628;
var NNI143647 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI140832, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI43006, name: "b", sons: null}]};
NTI143647.node = NNI143647;
var NNI46660 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46660.node = NNI46660;
NTI46660.base = NTI46628;
var NNI221202 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI221202, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI221202, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI221202, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI221202, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI221202, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI221202, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI221202, name: "JArray", len: 0, sons: null}}};
NTI221202.node = NNI221202;
NTI221245.base = NTI221204;
var NNI221206 = {kind: 3, offset: "kind", len: 7, typ: NTI221202, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI43040, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI52487, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI43026, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI43032, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI221228, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI221245, name: "elems", sons: null}]]};
NTI221206.node = NNI221206;
NTI221204.base = NTI221206;
var NNI221234 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI201015, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI43006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI43040, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI221204, name: "Field3", sons: null}]};
NTI221234.node = NNI221234;
NTI221231.base = NTI221234;
var NNI221228 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI221231, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI43006, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI43006, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI43006, name: "last", sons: null}]};
NTI221228.node = NNI221228;
var NNI46650 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46650.node = NNI46650;
NTI46650.base = NTI46628;

function makeNimstrLit(c_65258) {
		  var ln = c_65258.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_65258.charCodeAt(i);
  }
  return result;
  

	
}

function mnewString(len_65309) {
		    return new Array(len_65309);
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_66227, src_66228, ti_66229) {
	var result_66419 = null;

		switch (ti_66229.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_66201(ti_66229))) {
			result_66419 = src_66228;
			}
			else {
				result_66419 = [src_66228[0], src_66228[1]];
			}
			
			break;
		case 19:
			      if (dest_66227 === null || dest_66227 === undefined) {
        dest_66227 = {};
      }
      else {
        for (var key in dest_66227) { delete dest_66227[key]; }
      }
      for (var key in src_66228) { dest_66227[key] = src_66228[key]; }
      result_66419 = dest_66227;
    
			break;
		case 18:
		case 17:
			if (!((ti_66229.base == null))) {
			result_66419 = nimCopy(dest_66227, src_66228, ti_66229.base);
			}
			else {
			if ((ti_66229.kind == 17)) {
			result_66419 = (dest_66227 === null || dest_66227 === undefined) ? {m_type: ti_66229} : dest_66227;
			}
			else {
				result_66419 = (dest_66227 === null || dest_66227 === undefined) ? {} : dest_66227;
			}
			}
			nimCopyAux(result_66419, src_66228, ti_66229.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_66228 === null) {
        result_66419 = null;
      }
      else {
        if (dest_66227 === null || dest_66227 === undefined) {
          dest_66227 = new Array(src_66228.length);
        }
        else {
          dest_66227.length = src_66228.length;
        }
        result_66419 = dest_66227;
        for (var i = 0; i < src_66228.length; ++i) {
          result_66419[i] = nimCopy(result_66419[i], src_66228[i], ti_66229.base);
        }
      }
    
			break;
		case 28:
			      if (src_66228 !== null) {
        result_66419 = src_66228.slice(0);
      }
    
			break;
		default: 
			result_66419 = src_66228;
			break;
		}

	return result_66419;

}

function arrayConstr(len_66486, value_66487, typ_66488) {
		    var result = new Array(len_66486);
    for (var i = 0; i < len_66486; ++i) result[i] = nimCopy(null, value_66487, typ_66488);
    return result;
  

	
}

function cstrToNimstr(c_65275) {
		  var ln = c_65275.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_65275.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_65275.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_65292) {
		  if (s_65292 === null) return "";
  var len = s_65292.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_65292[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_65292[i] < 128)
      asciiPart[i] = fcc(s_65292[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_63618, ename_63619) {
		e_63618.name = ename_63619;
		if ((excHandler == 0)) {
		unhandledException(e_63618);
		}
		
		e_63618.trace = nimCopy(null, raw_write_stack_trace_63468(), NTI43040);
		throw e_63618;

	
}

function addInt(a_65603, b_65604) {
		    var result = a_65603 + b_65604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet2 = setConstr(60, 62, 94);

function chckIndx(i_66505, a_66506, b_66507) {
			var Tmp1;

	var result_66508 = 0;

	BeforeRet: do {
			if (!(a_66506 <= i_66505)) Tmp1 = false; else {				Tmp1 = (i_66505 <= b_66507);			}		if (Tmp1) {
		result_66508 = i_66505;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_66505, a_66506, b_66507);
		}
		
	} while (false);

	return result_66508;

}
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function subInt(a_65621, b_65622) {
		    var result = a_65621 - b_65622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function divInt(a_65657, b_65658) {
		    if (b_65658 == 0) raiseDivByZero();
    if (b_65658 == -1 && a_65657 == 2147483647) raiseOverflow();
    return Math.trunc(a_65657 / b_65658);
  

	
}

function mulInt(a_65639, b_65640) {
		    var result = a_65639 * b_65640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet8 = setConstr([65, 90], [97, 122]);

function chckRange(i_66524, a_66525, b_66526) {
			var Tmp1;

	var result_66527 = 0;

	BeforeRet: do {
			if (!(a_66525 <= i_66524)) Tmp1 = false; else {				Tmp1 = (i_66524 <= b_66526);			}		if (Tmp1) {
		result_66527 = i_66524;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_66527;

}
var ConstSet9 = setConstr([97, 122]);
var ConstSet10 = setConstr(5);

function raiseFieldError(f_65043) {
		var e_65046 = null;
		e_65046 = {m_type: NTI46660, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_65046.message = nimCopy(null, (f_65043 || []).concat(makeNimstrLit(" is not accessible") || []), NTI43040);
		e_65046.parent = null;
		raiseException(e_65046, "FieldError");

	
}
var ConstSet11 = setConstr(6);
var ConstSet12 = setConstr(6);
var ConstSet13 = setConstr(6);
var ConstSet14 = setConstr(6);
var ConstSet15 = setConstr(6);

function eqStrings(a_65487, b_65488) {
		    if (a_65487 == b_65488) return true;
    if (a_65487 === null && b_65488.length == 0) return true;
    if (b_65488 === null && a_65487.length == 0) return true;
    if ((!a_65487) || (!b_65488)) return false;
    var alen = a_65487.length;
    if (alen != b_65488.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_65487[i] != b_65488[i]) return false;
    return true;
  

	
}
var ConstSet16 = setConstr(5);
var nim_program_result = 0;
var global_raise_hook_60618 = [null];
var local_raise_hook_60623 = [null];
var out_of_mem_hook_60626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var object_id_201237 = [0];

function is_fat_pointer_66201(ti_66203) {
	var result_66204 = false;

	BeforeRet: do {
		result_66204 = !((ConstSet1[ti_66203.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_66204;

}

function nimCopyAux(dest_66232, src_66233, n_66235) {
		switch (n_66235.kind) {
		case 0:
			break;
		case 1:
			      dest_66232[n_66235.offset] = nimCopy(dest_66232[n_66235.offset], src_66233[n_66235.offset], n_66235.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_66235.sons.length; i++) {
      nimCopyAux(dest_66232, src_66233, n_66235.sons[i]);
    }
    
			break;
		case 3:
			      dest_66232[n_66235.offset] = nimCopy(dest_66232[n_66235.offset], src_66233[n_66235.offset], n_66235.typ);
      for (var i = 0; i < n_66235.sons.length; ++i) {
        nimCopyAux(dest_66232, src_66233, n_66235.sons[i][1]);
      }
    
			break;
		}

	
}

function add_60638(x_60641, x_60641_Idx, y_60642) {
		      if (x_60641[x_60641_Idx] === null) { x_60641[x_60641_Idx] = []; }
      var off = x_60641[x_60641_Idx].length;
      x_60641[x_60641_Idx].length += y_60642.length;
      for (var i = 0; i < y_60642.length; ++i) {
        x_60641[x_60641_Idx][off+i] = y_60642.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_63151(f_63153) {
					var Tmp3;

	var result_63154 = [null];

		var it_63162 = f_63153;
		var i_63164 = 0;
		var total_63166 = 0;
		var temp_frames_63173 = arrayConstr(64, {Field0: null, Field1: 0}, NTI63156);
		L1: do {
				L2: while (true) {
					if (!!((it_63162 == null))) Tmp3 = false; else {						Tmp3 = (i_63164 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_63173[i_63164].Field0 = it_63162.procname;
					temp_frames_63173[i_63164].Field1 = it_63162.line;
					i_63164 += 1;
					total_63166 += 1;
					it_63162 = it_63162.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_63162 == null))) break L5;
					total_63166 += 1;
					it_63162 = it_63162.prev;
				}
		} while(false);
		result_63154[0] = nimCopy(null, [], NTI43040);
		if (!((total_63166 == i_63164))) {
		if (result_63154[0] != null) { result_63154[0] = (result_63154[0]).concat(makeNimstrLit("(")); } else { result_63154[0] = makeNimstrLit("("); };
		if (result_63154[0] != null) { result_63154[0] = (result_63154[0]).concat(cstrToNimstr(((total_63166 - i_63164))+"")); } else { result_63154[0] = cstrToNimstr(((total_63166 - i_63164))+"").slice(); };
		if (result_63154[0] != null) { result_63154[0] = (result_63154[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_63154[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_63421 = 0;
			var colontmp__248050 = 0;
			colontmp__248050 = (i_63164 - 1);
			var res_248055 = colontmp__248050;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_248055)) break L8;
						j_63421 = res_248055;
						add_60638(result_63154, 0, temp_frames_63173[j_63421].Field0);
						if ((0 < temp_frames_63173[j_63421].Field1)) {
						if (result_63154[0] != null) { result_63154[0] = (result_63154[0]).concat(makeNimstrLit(", line: ")); } else { result_63154[0] = makeNimstrLit(", line: "); };
						if (result_63154[0] != null) { result_63154[0] = (result_63154[0]).concat(cstrToNimstr((temp_frames_63173[j_63421].Field1)+"")); } else { result_63154[0] = cstrToNimstr((temp_frames_63173[j_63421].Field1)+"").slice(); };
						}
						
						if (result_63154[0] != null) { result_63154[0] = (result_63154[0]).concat(makeNimstrLit("\x0A")); } else { result_63154[0] = makeNimstrLit("\x0A"); };
						res_248055 -= 1;
					}
			} while(false);
		} while(false);

	return result_63154[0];

}

function raw_write_stack_trace_63468() {
	var result_63470 = null;

		if (!((framePtr == null))) {
		result_63470 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_63151(framePtr) || []), NTI43040);
		}
		else {
			result_63470 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI43040);
		}
		

	return result_63470;

}

function unhandledException(e_63529) {
		var buf_63530 = [[]];
		if (!(((e_63529.message != null ? e_63529.message.length : 0) == 0))) {
		if (buf_63530[0] != null) { buf_63530[0] = (buf_63530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_63530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_63530[0] != null) { buf_63530[0] = (buf_63530[0]).concat(e_63529.message); } else { buf_63530[0] = e_63529.message.slice(); };
		}
		else {
		if (buf_63530[0] != null) { buf_63530[0] = (buf_63530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_63530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_63530[0] != null) { buf_63530[0] = (buf_63530[0]).concat(makeNimstrLit(" [")); } else { buf_63530[0] = makeNimstrLit(" ["); };
		add_60638(buf_63530, 0, e_63529.name);
		if (buf_63530[0] != null) { buf_63530[0] = (buf_63530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_63530[0] = makeNimstrLit("]\x0A"); };
		if (buf_63530[0] != null) { buf_63530[0] = (buf_63530[0]).concat(raw_write_stack_trace_63468()); } else { buf_63530[0] = raw_write_stack_trace_63468().slice(); };
		var cbuf_63601 = toJSStr(buf_63530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_63601);
  }
  else {
    throw cbuf_63601;
  }
  

	
}

function raiseOverflow() {
		var e_64046 = null;
		e_64046 = {m_type: NTI46646, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_64046.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI43040);
		e_64046.parent = null;
		raiseException(e_64046, "OverflowError");

	
}

function raiseIndexError(i_64643, a_64644, b_64645) {
		var e_64802 = null;
		e_64802 = {m_type: NTI46658, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_64802.message = nimCopy(null, (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_64643)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_64644)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_64645)+"") || []), NTI43040);
		e_64802.parent = null;
		raiseException(e_64802, "IndexError");

	
}

function raiseDivByZero() {
		var e_64245 = null;
		e_64245 = {m_type: NTI46644, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_64245.message = nimCopy(null, makeNimstrLit("division by zero"), NTI43040);
		e_64245.parent = null;
		raiseException(e_64245, "DivByZeroError");

	
}

function parse_saturated_natural_86631(s_86633, b_86635, b_86635_Idx, start_86636) {
			var Tmp1;
					var Tmp4;

	var result_86638 = 0;

	var F={procname:"parseutils.parseSaturatedNatural",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 480;
		var i_86639 = start_86636;
		if (((i_86639 < (s_86633 != null ? s_86633.length : 0)) && (s_86633[chckIndx(i_86639, 0, s_86633.length+0-1)-0] == 43))) {
		F.line = 481;
		i_86639 = addInt(i_86639, 1);
		}
		
			if (!(i_86639 < (s_86633 != null ? s_86633.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet6[s_86633[chckIndx(i_86639, 0, s_86633.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 483;
		b_86635[b_86635_Idx] = 0;
		L2: do {
			F.line = 484;
				L3: while (true) {
					if (!(i_86639 < (s_86633 != null ? s_86633.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet7[s_86633[chckIndx(i_86639, 0, s_86633.length+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					F.line = 485;
					var c_86668 = subInt(s_86633[chckIndx(i_86639, 0, s_86633.length+0-1)-0], 48);
					if ((b_86635[b_86635_Idx] <= divInt(subInt(2147483647, c_86668), 10))) {
					F.line = 487;
					b_86635[b_86635_Idx] = addInt(mulInt(b_86635[b_86635_Idx], 10), c_86668);
					}
					else {
						F.line = 489;
						b_86635[b_86635_Idx] = 2147483647;
					}
					
					F.line = 490;
					i_86639 = addInt(i_86639, 1);
					L5: do {
						F.line = 491;
							L6: while (true) {
							if (!((i_86639 < (s_86633 != null ? s_86633.length : 0)) && (s_86633[chckIndx(i_86639, 0, s_86633.length+0-1)-0] == 95))) break L6;
								F.line = 491;
								i_86639 = addInt(i_86639, 1);
							}
					} while(false);
				}
		} while(false);
		F.line = 492;
		result_86638 = subInt(i_86639, start_86636);
		}
		
	framePtr = F.prev;

	return result_86638;

}

function raiseRangeError() {
		var e_64445 = null;
		e_64445 = {m_type: NTI46662, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_64445.message = nimCopy(null, makeNimstrLit("value out of range"), NTI43040);
		e_64445.parent = null;
		raiseException(e_64445, "RangeError");

	
}

function HEX5BHEX5D_143704(s_143708, x_143710) {
	var result_143711 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3855;
		var a_143801 = x_143710.a;
		F.line = 3856;
		var l_144001 = addInt(subInt(subInt((s_143708 != null ? s_143708.length : 0), x_143710.b), a_143801), 1);
		F.line = 3857;
		result_143711 = nimCopy(null, mnewString(chckRange(l_144001, 0, 2147483647)), NTI43040);
		L1: do {
			F.line = 3858;
			var i_144009 = 0;
			F.line = 2648;
			var i_248075 = 0;
			L2: do {
				F.line = 2649;
					L3: while (true) {
					if (!(i_248075 < l_144001)) break L3;
						F.line = 3858;
						i_144009 = i_248075;
						F.line = 3858;
						result_143711[chckIndx(i_144009, 0, result_143711.length+0-1)-0] = s_143708[chckIndx(addInt(i_144009, a_143801), 0, s_143708.length+0-1)-0];
						F.line = 2651;
						i_248075 = addInt(i_248075, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_143711;

}

function HEX2EHEX2E_143639(a_143643, b_143644) {
	var result_143650 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
		F.line = 492;
		nimCopy(result_143650, {a: a_143643, b: b_143644}, NTI143647);
	framePtr = F.prev;

	return result_143650;

}

function parse_standard_format_specifier_244324(s_244326, start_244327, ignore_unknown_suffix_244329) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_244330 = {fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0};

	var F={procname:"strformat.parseStandardFormatSpecifier",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/strformat.nim",line:0};
	framePtr = F;
		F.line = 377;
		result_244330.fill = 32;
		F.line = 378;
		result_244330.align = 0;
		F.line = 379;
		result_244330.sign = 45;
		F.line = 380;
		var i_244333 = start_244327;
		if (((addInt(i_244333, 1) < (s_244326 != null ? s_244326.length : 0)) && (ConstSet2[s_244326[chckIndx(addInt(i_244333, 1), 0, s_244326.length+0-1)-0]] != undefined))) {
		F.line = 382;
		result_244330.fill = s_244326[chckIndx(i_244333, 0, s_244326.length+0-1)-0];
		F.line = 383;
		result_244330.align = s_244326[chckIndx(addInt(i_244333, 1), 0, s_244326.length+0-1)-0];
		F.line = 384;
		i_244333 = addInt(i_244333, 2);
		}
		else {
		if (((i_244333 < (s_244326 != null ? s_244326.length : 0)) && (ConstSet3[s_244326[chckIndx(i_244333, 0, s_244326.length+0-1)-0]] != undefined))) {
		F.line = 386;
		result_244330.align = s_244326[chckIndx(i_244333, 0, s_244326.length+0-1)-0];
		F.line = 387;
		i_244333 = addInt(i_244333, 1);
		}
		}
		if (((i_244333 < (s_244326 != null ? s_244326.length : 0)) && (ConstSet4[s_244326[chckIndx(i_244333, 0, s_244326.length+0-1)-0]] != undefined))) {
		F.line = 390;
		result_244330.sign = s_244326[chckIndx(i_244333, 0, s_244326.length+0-1)-0];
		F.line = 391;
		i_244333 = addInt(i_244333, 1);
		}
		
		if (((i_244333 < (s_244326 != null ? s_244326.length : 0)) && (s_244326[chckIndx(i_244333, 0, s_244326.length+0-1)-0] == 35))) {
		F.line = 394;
		result_244330.alternateForm = true;
		F.line = 395;
		i_244333 = addInt(i_244333, 1);
		}
		
			if (!((addInt(i_244333, 1) < (s_244326 != null ? s_244326.length : 0)) && (s_244326[chckIndx(i_244333, 0, s_244326.length+0-1)-0] == 48))) Tmp1 = false; else {				Tmp1 = (ConstSet5[s_244326[chckIndx(addInt(i_244333, 1), 0, s_244326.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 398;
		result_244330.padWithZero = true;
		F.line = 399;
		i_244333 = addInt(i_244333, 1);
		}
		
		F.line = 401;
		var parsed_length_244391 = parse_saturated_natural_86631(s_244326, result_244330, "minimumWidth", i_244333);
		F.line = 402;
		i_244333 = addInt(i_244333, parsed_length_244391);
		if (((i_244333 < (s_244326 != null ? s_244326.length : 0)) && (s_244326[chckIndx(i_244333, 0, s_244326.length+0-1)-0] == 46))) {
		F.line = 404;
		i_244333 = addInt(i_244333, 1);
		F.line = 405;
		var parsed_length_b_244405 = parse_saturated_natural_86631(s_244326, result_244330, "precision", i_244333);
		F.line = 406;
		i_244333 = addInt(i_244333, parsed_length_b_244405);
		}
		else {
			F.line = 408;
			result_244330.precision = -1;
		}
		
			if (!(i_244333 < (s_244326 != null ? s_244326.length : 0))) Tmp2 = false; else {				Tmp2 = (ConstSet8[s_244326[chckIndx(i_244333, 0, s_244326.length+0-1)-0]] != undefined);			}		if (Tmp2) {
		F.line = 411;
		result_244330.typ = s_244326[chckIndx(i_244333, 0, s_244326.length+0-1)-0];
		F.line = 412;
		i_244333 = addInt(i_244333, 1);
		}
		
		F.line = 413;
		result_244330.endPosition = i_244333;
			if (!!((i_244333 == (s_244326 != null ? s_244326.length : 0)))) Tmp3 = false; else {				Tmp3 = !(ignore_unknown_suffix_244329);			}		if (Tmp3) {
		F.line = 3348;
		var e_244460 = null;
		F.line = 3351;
		e_244460 = {m_type: NTI46652, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 416;
		e_244460.message = nimCopy(null, (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_143704(s_244326, HEX2EHEX2E_143639(i_244333, 1)) || []), NTI43040);
		F.line = 3344;
		e_244460.parent = null;
		F.line = 415;
		raiseException(e_244460, "ValueError");
		}
		
	framePtr = F.prev;

	return result_244330;

}

function nucruneLen(s_108227) {
	var result_108228 = 0;

	var F={procname:"unicode.runeLen",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/unicode.nim",line:0};
	framePtr = F;
		F.line = 49;
		var i_108230 = 0;
		L1: do {
			F.line = 50;
				L2: while (true) {
				if (!(i_108230 < (s_108227 != null ? s_108227.length : 0))) break L2;
					if ((s_108227[chckIndx(i_108230, 0, s_108227.length+0-1)-0] <= 127)) {
					F.line = 51;
					i_108230 = addInt(i_108230, 1);
					}
					else {
					if ((((s_108227[chckIndx(i_108230, 0, s_108227.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					F.line = 52;
					i_108230 = addInt(i_108230, 2);
					}
					else {
					if ((((s_108227[chckIndx(i_108230, 0, s_108227.length+0-1)-0] >>> 0) >>> 4) == 14)) {
					F.line = 53;
					i_108230 = addInt(i_108230, 3);
					}
					else {
					if ((((s_108227[chckIndx(i_108230, 0, s_108227.length+0-1)-0] >>> 0) >>> 3) == 30)) {
					F.line = 54;
					i_108230 = addInt(i_108230, 4);
					}
					else {
					if ((((s_108227[chckIndx(i_108230, 0, s_108227.length+0-1)-0] >>> 0) >>> 2) == 62)) {
					F.line = 55;
					i_108230 = addInt(i_108230, 5);
					}
					else {
					if ((((s_108227[chckIndx(i_108230, 0, s_108227.length+0-1)-0] >>> 0) >>> 1) == 126)) {
					F.line = 56;
					i_108230 = addInt(i_108230, 6);
					}
					else {
						F.line = 57;
					i_108230 = addInt(i_108230, 1);
					}
					}}}}}
					F.line = 58;
					result_108228 = addInt(result_108228, 1);
				}
		} while(false);
	framePtr = F.prev;

	return result_108228;

}

function rune_len_at_108359(s_108361, i_108362) {
	var result_108363 = 0;

	var F={procname:"unicode.runeLenAt",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/unicode.nim",line:0};
	framePtr = F;
		if ((s_108361[chckIndx(i_108362, 0, s_108361.length+0-1)-0] <= 127)) {
		F.line = 70;
		result_108363 = 1;
		}
		else {
		if ((((s_108361[chckIndx(i_108362, 0, s_108361.length+0-1)-0] >>> 0) >>> 5) == 6)) {
		F.line = 71;
		result_108363 = 2;
		}
		else {
		if ((((s_108361[chckIndx(i_108362, 0, s_108361.length+0-1)-0] >>> 0) >>> 4) == 14)) {
		F.line = 72;
		result_108363 = 3;
		}
		else {
		if ((((s_108361[chckIndx(i_108362, 0, s_108361.length+0-1)-0] >>> 0) >>> 3) == 30)) {
		F.line = 73;
		result_108363 = 4;
		}
		else {
		if ((((s_108361[chckIndx(i_108362, 0, s_108361.length+0-1)-0] >>> 0) >>> 2) == 62)) {
		F.line = 74;
		result_108363 = 5;
		}
		else {
		if ((((s_108361[chckIndx(i_108362, 0, s_108361.length+0-1)-0] >>> 0) >>> 1) == 126)) {
		F.line = 75;
		result_108363 = 6;
		}
		else {
			F.line = 76;
			result_108363 = 1;
		}
		}}}}}
	framePtr = F.prev;

	return result_108363;

}

function rune_offset_114044(s_114046, pos_114047, start_114048) {
	var result_114049 = 0;

	var F={procname:"unicode.runeOffset",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/unicode.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 327;
		var i_114051 = 0;
		F.line = 328;
		var o_114052 = start_114048;
		L1: do {
			F.line = 329;
				L2: while (true) {
				if (!(i_114051 < pos_114047)) break L2;
					F.line = 330;
					o_114052 = addInt(o_114052, chckRange(rune_len_at_108359(s_114046, o_114052), 0, 2147483647));
					if (((s_114046 != null ? s_114046.length : 0) <= o_114052)) {
					F.line = 332;
					result_114049 = -1;
					break BeforeRet;
					}
					
					F.line = 333;
					i_114051 = addInt(i_114051, 1);
				}
		} while(false);
		F.line = 334;
		result_114049 = o_114052;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_114049;

}

function validate_utf8_111229(s_111231) {
						var Tmp3;
						var Tmp4;
						var Tmp5;
						var Tmp6;
						var Tmp7;
						var Tmp8;

	var result_111232 = 0;

	var F={procname:"unicode.validateUTF8",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/unicode.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 180;
		var i_111234 = 0;
		F.line = 181;
		var l_111235 = (s_111231 != null ? s_111231.length : 0);
		L1: do {
			F.line = 182;
				L2: while (true) {
				if (!(i_111234 < l_111235)) break L2;
					if ((s_111231[chckIndx(i_111234, 0, s_111231.length+0-1)-0] <= 127)) {
					F.line = 184;
					i_111234 = addInt(i_111234, 1);
					}
					else {
					if ((((s_111231[chckIndx(i_111234, 0, s_111231.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					if ((s_111231[chckIndx(i_111234, 0, s_111231.length+0-1)-0] < 194)) {
					F.line = 186;
					result_111232 = i_111234;
					break BeforeRet;
					}
					
						if (!(addInt(i_111234, 1) < l_111235)) Tmp3 = false; else {							Tmp3 = (((s_111231[chckIndx(addInt(i_111234, 1), 0, s_111231.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp3) {
					F.line = 187;
					i_111234 = addInt(i_111234, 2);
					}
					else {
						F.line = 188;
						result_111232 = i_111234;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_111231[chckIndx(i_111234, 0, s_111231.length+0-1)-0] >>> 0) >>> 4) == 14)) {
						if (!(addInt(i_111234, 2) < l_111235)) Tmp5 = false; else {							Tmp5 = (((s_111231[chckIndx(addInt(i_111234, 1), 0, s_111231.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp5) Tmp4 = false; else {							Tmp4 = (((s_111231[chckIndx(addInt(i_111234, 2), 0, s_111231.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp4) {
					F.line = 191;
					i_111234 = addInt(i_111234, 3);
					}
					else {
						F.line = 192;
						result_111232 = i_111234;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_111231[chckIndx(i_111234, 0, s_111231.length+0-1)-0] >>> 0) >>> 3) == 30)) {
						if (!(addInt(i_111234, 3) < l_111235)) Tmp8 = false; else {							Tmp8 = (((s_111231[chckIndx(addInt(i_111234, 1), 0, s_111231.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp8) Tmp7 = false; else {							Tmp7 = (((s_111231[chckIndx(addInt(i_111234, 2), 0, s_111231.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (((s_111231[chckIndx(addInt(i_111234, 3), 0, s_111231.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp6) {
					F.line = 197;
					i_111234 = addInt(i_111234, 4);
					}
					else {
						F.line = 198;
						result_111232 = i_111234;
						break BeforeRet;
					}
					
					}
					else {
						F.line = 200;
						result_111232 = i_111234;
						break BeforeRet;
					}
					}}}
				}
		} while(false);
		F.line = 201;
		result_111232 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_111232;

}

function nsuRepeatChar(c_194859, count_194860) {
	var result_194861 = null;

	var F={procname:"strutils.repeat",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		F.line = 1290;
		result_194861 = nimCopy(null, mnewString(count_194860), NTI43040);
		L1: do {
			F.line = 1291;
			var i_194870 = 0;
			F.line = 2610;
			var colontmp__248107 = 0;
			F.line = 1291;
			colontmp__248107 = subInt(count_194860, 1);
			F.line = 2620;
			var res_248108 = 0;
			L2: do {
				F.line = 2621;
					L3: while (true) {
					if (!(res_248108 <= colontmp__248107)) break L3;
						F.line = 1291;
						i_194870 = res_248108;
						F.line = 1291;
						result_194861[chckIndx(i_194870, 0, result_194861.length+0-1)-0] = c_194859;
						F.line = 2623;
						res_248108 = addInt(res_248108, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_194861;

}

function align_string_244223(s_244225, minimum_width_244226, align_244227, fill_244228) {
			var Tmp1;

	var result_244229 = null;

	var F={procname:"strformat.alignString",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/strformat.nim",line:0};
	framePtr = F;
		if ((minimum_width_244226 == 0)) {
		F.line = 281;
		result_244229 = nimCopy(null, s_244225, NTI43040);
		}
		else {
			F.line = 283;
			if ((validate_utf8_111229(s_244225) == -1)) {
			Tmp1 = nucruneLen(s_244225);
			}
			else {
			Tmp1 = (s_244225 != null ? s_244225.length : 0);
			}
			
			var s_rune_len_244231 = Tmp1;
			F.line = 284;
			var to_fill_244232 = subInt(minimum_width_244226, s_rune_len_244231);
			if ((to_fill_244232 <= 0)) {
			F.line = 286;
			result_244229 = nimCopy(null, s_244225, NTI43040);
			}
			else {
			if (((align_244227 == 60) || (align_244227 == 0))) {
			F.line = 288;
			result_244229 = nimCopy(null, (s_244225 || []).concat(nsuRepeatChar(fill_244228, chckRange(to_fill_244232, 0, 2147483647)) || []), NTI43040);
			}
			else {
			if ((align_244227 == 94)) {
			F.line = 290;
			var half_244233 = divInt(to_fill_244232, 2);
			F.line = 291;
			result_244229 = nimCopy(null, (nsuRepeatChar(fill_244228, chckRange(half_244233, 0, 2147483647)) || []).concat(s_244225 || [],nsuRepeatChar(fill_244228, chckRange(subInt(to_fill_244232, half_244233), 0, 2147483647)) || []), NTI43040);
			}
			else {
				F.line = 293;
				result_244229 = nimCopy(null, (nsuRepeatChar(fill_244228, chckRange(to_fill_244232, 0, 2147483647)) || []).concat(s_244225 || []), NTI43040);
			}
			}}
		}
		
	framePtr = F.prev;

	return result_244229;

}

function format_value_244691(result_244694, result_244694_Idx, value_244695, specifier_244696) {
	var F={procname:"strformat.formatValue",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/strformat.nim",line:0};
	framePtr = F;
		F.line = 499;
		var spec_244697 = parse_standard_format_specifier_244324(specifier_244696, 0, false);
		F.line = 500;
		var value_244698 = nimCopy(null, value_244695, NTI43040);
		F.line = 501;
		switch (spec_244697.typ) {
		case 115:
		case 0:
			break;
		default: 
			F.line = 3348;
			var e_244701 = null;
			F.line = 3351;
			e_244701 = {m_type: NTI46652, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 505;
			e_244701.message = nimCopy(null, (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_244697.typ]), NTI43040);
			F.line = 3344;
			e_244701.parent = null;
			F.line = 504;
			raiseException(e_244701, "ValueError");
			break;
		}
		if (!((spec_244697.precision == -1))) {
		if ((spec_244697.precision < nucruneLen(value_244698))) {
		F.line = 509;
		(value_244698 == null ? value_244698 = mnewString(chckRange(rune_offset_114044(value_244698, chckRange(spec_244697.precision, 0, 2147483647), 0), 0, 2147483647)) : value_244698.length = chckRange(rune_offset_114044(value_244698, chckRange(spec_244697.precision, 0, 2147483647), 0), 0, 2147483647));
		}
		
		}
		
		F.line = 510;
		if (result_244694[result_244694_Idx] != null) { result_244694[result_244694_Idx] = (result_244694[result_244694_Idx]).concat(align_string_244223(value_244698, spec_244697.minimumWidth, spec_244697.align, spec_244697.fill)); } else { result_244694[result_244694_Idx] = align_string_244223(value_244698, spec_244697.minimumWidth, spec_244697.align, spec_244697.fill).slice(); };
	framePtr = F.prev;

	
}

function nsuToUpperAsciiChar(c_190862) {
	var result_190863 = 0;

	var F={procname:"strutils.toUpperAscii",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet9[c_190862] != undefined)) {
		F.line = 261;
		result_190863 = chckRange(subInt(c_190862, 32), 0, 255);
		}
		else {
			F.line = 263;
			result_190863 = c_190862;
		}
		
	framePtr = F.prev;

	return result_190863;

}

function head_upper_247023(str_247025) {
	var result_247026 = null;

	var F={procname:"nimjson.headUpper",prev:framePtr,filename:"/home/jiro4989/src/github.com/jiro4989/nimjson/src/nimjsonpkg/util.nim",line:0};
	framePtr = F;
		F.line = 31;
		result_247026 = nimCopy(null, [nsuToUpperAsciiChar(str_247025[chckIndx(0, 0, str_247025.length+0-1)-0])].concat(HEX5BHEX5D_143704(str_247025, HEX2EHEX2E_143639(1, 1)) || []), NTI43040);
	framePtr = F.prev;

	return result_247026;

}

function len_228165(t_228170) {
	var result_228171 = 0;

	var F={procname:"len.len",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 1473;
		result_228171 = t_228170.counter;
	framePtr = F.prev;

	return result_228171;

}

function is_filled_205418(hcode_205420) {
	var result_205421 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/hashcommon.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_205421 = !((hcode_205420 == 0));
	framePtr = F.prev;

	return result_205421;

}

function get_type_247075(key_247077, value_247078, strs_247081, strs_247081_Idx, index_247082) {
		var Tmp1;
				var Tmp2;
				var Tmp3;
			var Tmp4;
			var Tmp5;

	var result_247083 = null;

	var F={procname:"nimjson.getType",prev:framePtr,filename:"/home/jiro4989/src/github.com/jiro4989/nimjson/src/nimjsonpkg/util.nim",line:0};
	framePtr = F;
		F.line = 36;
		F.line = 40;
		switch (value_247078.kind) {
		case 6:
			F.line = 42;
			var u_key_247084 = head_upper_247023(key_247077);
			F.line = 43;
			var s_247085 = makeNimstrLit("seq[");
				var Tmp2 = value_247078;
				if (ConstSet11[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
			if ((0 < ((Tmp3 = Tmp2.elems, Tmp3) != null ? Tmp3.length : 0))) {
			F.line = 46;
			var Tmp4 = value_247078;
			if (ConstSet12[Tmp4.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
			var child_247095 = (Tmp5 = Tmp4.elems, Tmp5)[chckIndx(0, 0, Tmp5.length+0-1)-0];
			F.line = 47;
			if (s_247085 != null) { s_247085 = (s_247085).concat(get_type_247075(u_key_247084, child_247095, strs_247081, strs_247081_Idx, index_247082)); } else { s_247085 = get_type_247075(u_key_247084, child_247095, strs_247081, strs_247081_Idx, index_247082).slice(); };
			if ((child_247095.kind == 5)) {
			F.line = 49;
			obj_format_247002(child_247095, u_key_247084, strs_247081, strs_247081_Idx, addInt(index_247082, 1));
			}
			
			}
			else {
				F.line = 51;
			if (s_247085 != null) { s_247085 = (s_247085).concat(makeNimstrLit("NilType")); } else { s_247085 = makeNimstrLit("NilType"); };
			}
			
			F.line = 52;
			if (s_247085 != null) { s_247085 = (s_247085).concat(makeNimstrLit("]")); } else { s_247085 = makeNimstrLit("]"); };
			Tmp1 = s_247085;
			break;
		case 5:
			Tmp1 = head_upper_247023(key_247077);
			break;
		case 4:
			Tmp1 = makeNimstrLit("string");
			break;
		case 2:
			Tmp1 = makeNimstrLit("int64");
			break;
		case 3:
			Tmp1 = makeNimstrLit("float64");
			break;
		case 1:
			Tmp1 = makeNimstrLit("bool");
			break;
		case 0:
			Tmp1 = makeNimstrLit("NilType");
			break;
		}
		result_247083 = nimCopy(null, Tmp1, NTI43040);
	framePtr = F.prev;

	return result_247083;

}

function sys_fatal_56862(message_56866) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/system/fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_57007 = null;
		F.line = 37;
		e_57007 = {m_type: NTI46650, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_57007.message = nimCopy(null, message_56866, NTI43040);
		F.line = 39;
		raiseException(e_57007, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_56858(msg_56860) {
	var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/system/assertions.nim",line:0};
	framePtr = F;
		F.line = 20;
		sys_fatal_56862(msg_56860);
	framePtr = F.prev;

	
}

function failed_assert_impl_57055(msg_57057) {
	var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/system/assertions.nim",line:0};
	framePtr = F;
		F.line = 27;
		raise_assert_56858(msg_57057);
	framePtr = F.prev;

	
}

function obj_format_247002(self_247004, obj_name_247005, strs_247020, strs_247020_Idx, index_247021) {
			var Tmp2;

	var F={procname:"nimjson.objFormat",prev:framePtr,filename:"/home/jiro4989/src/github.com/jiro4989/nimjson/src/nimjsonpkg/util.nim",line:0};
	framePtr = F;
		F.line = 64;
		if (strs_247020[strs_247020_Idx] != null) { strs_247020[strs_247020_Idx].push([]); } else { strs_247020[strs_247020_Idx] = [[]]; };
		F.line = 65;
		F.line = 65;
		var fmt_res_247146 = [mnewString(0)];
		F.line = 65;
		if (fmt_res_247146[0] != null) { fmt_res_247146[0] = (fmt_res_247146[0]).concat(makeNimstrLit("  ")); } else { fmt_res_247146[0] = makeNimstrLit("  "); };
		F.line = 65;
		format_value_244691(fmt_res_247146, 0, head_upper_247023(obj_name_247005), []);
		F.line = 65;
		if (fmt_res_247146[0] != null) { fmt_res_247146[0] = (fmt_res_247146[0]).concat(makeNimstrLit(" = ref object\x0A")); } else { fmt_res_247146[0] = makeNimstrLit(" = ref object\x0A"); };
		if (strs_247020[strs_247020_Idx][chckIndx(index_247021, 0, strs_247020[strs_247020_Idx].length+0-1)-0] != null) { strs_247020[strs_247020_Idx][chckIndx(index_247021, 0, strs_247020[strs_247020_Idx].length+0-1)-0] = (strs_247020[strs_247020_Idx][chckIndx(index_247021, 0, strs_247020[strs_247020_Idx].length+0-1)-0]).concat(fmt_res_247146[0]); } else { strs_247020[strs_247020_Idx][chckIndx(index_247021, 0, strs_247020[strs_247020_Idx].length+0-1)-0] = fmt_res_247146[0].slice(); };
		L1: do {
			F.line = 66;
			var k_247161 = null;
			F.line = 66;
			var v_247162 = null;
			F.line = 1618;
			var colontmp__248114 = {data: null, counter: 0, first: 0, last: 0};
			F.line = 66;
			var Tmp2 = self_247004;
			if (ConstSet10[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
			nimCopy(colontmp__248114, Tmp2.fields, NTI221228);
			F.line = 1644;
			var l_248116 = len_228165(colontmp__248114);
			F.line = 1256;
			var h_248117 = colontmp__248114.first;
			L3: do {
				F.line = 1645;
					L4: while (true) {
					if (!(0 <= h_248117)) break L4;
						F.line = 1258;
						var nxt_248119 = colontmp__248114.data[chckIndx(h_248117, 0, colontmp__248114.data.length+0-1)-0].Field1;
						if (is_filled_205418(colontmp__248114.data[chckIndx(h_248117, 0, colontmp__248114.data.length+0-1)-0].Field0)) {
						F.line = 66;
						k_247161 = colontmp__248114.data[chckIndx(h_248117, 0, colontmp__248114.data.length+0-1)-0].Field2;
						F.line = 1646;
						v_247162 = colontmp__248114.data[chckIndx(h_248117, 0, colontmp__248114.data.length+0-1)-0].Field3;
						F.line = 67;
						var t_247163 = get_type_247075(k_247161, v_247162, strs_247020, strs_247020_Idx, index_247021);
						F.line = 68;
						F.line = 68;
						var fmt_res_247164 = [mnewString(0)];
						F.line = 68;
						if (fmt_res_247164[0] != null) { fmt_res_247164[0] = (fmt_res_247164[0]).concat(makeNimstrLit("    ")); } else { fmt_res_247164[0] = makeNimstrLit("    "); };
						F.line = 68;
						format_value_244691(fmt_res_247164, 0, k_247161, []);
						F.line = 68;
						if (fmt_res_247164[0] != null) { fmt_res_247164[0] = (fmt_res_247164[0]).concat(makeNimstrLit(": ")); } else { fmt_res_247164[0] = makeNimstrLit(": "); };
						F.line = 68;
						format_value_244691(fmt_res_247164, 0, t_247163, []);
						F.line = 68;
						if (fmt_res_247164[0] != null) { fmt_res_247164[0] = (fmt_res_247164[0]).concat(makeNimstrLit("\x0A")); } else { fmt_res_247164[0] = makeNimstrLit("\x0A"); };
						if (strs_247020[strs_247020_Idx][chckIndx(index_247021, 0, strs_247020[strs_247020_Idx].length+0-1)-0] != null) { strs_247020[strs_247020_Idx][chckIndx(index_247021, 0, strs_247020[strs_247020_Idx].length+0-1)-0] = (strs_247020[strs_247020_Idx][chckIndx(index_247021, 0, strs_247020[strs_247020_Idx].length+0-1)-0]).concat(fmt_res_247164[0]); } else { strs_247020[strs_247020_Idx][chckIndx(index_247021, 0, strs_247020[strs_247020_Idx].length+0-1)-0] = fmt_res_247164[0].slice(); };
						if ((v_247162.kind == 5)) {
						F.line = 72;
						obj_format_247002(v_247162, k_247161, strs_247020, strs_247020_Idx, addInt(index_247021, 1));
						}
						
						if (!((len_228165(colontmp__248114) == l_248116))) {
						F.line = 1647;
						failed_assert_impl_57055(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim(1647, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						F.line = 1260;
						h_248117 = nxt_248119;
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function nsuJoinSep(a_196059, sep_196060) {
	var result_196061 = null;

	var F={procname:"strutils.join",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((0 < (a_196059 != null ? a_196059.length : 0))) {
		F.line = 1766;
		var l_196072 = mulInt((sep_196060 != null ? sep_196060.length : 0), subInt((a_196059 != null ? a_196059.length : 0), 1));
		L1: do {
			F.line = 1767;
			var i_196086 = 0;
			F.line = 2610;
			var colontmp__248124 = 0;
			F.line = 1767;
			colontmp__248124 = (a_196059 != null ? (a_196059.length-1) : -1);
			F.line = 2620;
			var res_248125 = 0;
			L2: do {
				F.line = 2621;
					L3: while (true) {
					if (!(res_248125 <= colontmp__248124)) break L3;
						F.line = 1767;
						i_196086 = res_248125;
						F.line = 1767;
						l_196072 = addInt(l_196072, (a_196059[chckIndx(i_196086, 0, a_196059.length+0-1)-0] != null ? a_196059[chckIndx(i_196086, 0, a_196059.length+0-1)-0].length : 0));
						F.line = 2623;
						res_248125 = addInt(res_248125, 1);
					}
			} while(false);
		} while(false);
		F.line = 1768;
		result_196061 = nimCopy(null, mnewString(0), NTI43040);
		F.line = 1769;
		if (result_196061 != null) { result_196061 = (result_196061).concat(a_196059[chckIndx(0, 0, a_196059.length+0-1)-0]); } else { result_196061 = a_196059[chckIndx(0, 0, a_196059.length+0-1)-0].slice(); };
		L4: do {
			F.line = 1770;
			var i_196106 = 0;
			F.line = 2610;
			var colontmp__248131 = 0;
			F.line = 1770;
			colontmp__248131 = (a_196059 != null ? (a_196059.length-1) : -1);
			F.line = 2620;
			var res_248132 = 1;
			L5: do {
				F.line = 2621;
					L6: while (true) {
					if (!(res_248132 <= colontmp__248131)) break L6;
						F.line = 1770;
						i_196106 = res_248132;
						F.line = 1771;
						if (result_196061 != null) { result_196061 = (result_196061).concat(sep_196060); } else { result_196061 = sep_196060.slice(); };
						F.line = 1772;
						if (result_196061 != null) { result_196061 = (result_196061).concat(a_196059[chckIndx(i_196106, 0, a_196059.length+0-1)-0]); } else { result_196061 = a_196059[chckIndx(i_196106, 0, a_196059.length+0-1)-0].slice(); };
						F.line = 2623;
						res_248132 = addInt(res_248132, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			F.line = 1774;
			result_196061 = nimCopy(null, [], NTI43040);
		}
		
	framePtr = F.prev;

	return result_196061;

}

function to_type_string_247186(self_247188, obj_name_247189) {
				var Tmp1;
				var Tmp2;
			var Tmp3;
			var Tmp4;

	var result_247190 = null;

	var F={procname:"nimjson.toTypeString",prev:framePtr,filename:"/home/jiro4989/src/github.com/jiro4989/nimjson/src/nimjsonpkg/util.nim",line:0};
	framePtr = F;
		F.line = 102;
		if (result_247190 != null) { result_247190 = (result_247190).concat(makeNimstrLit("type\x0A")); } else { result_247190 = makeNimstrLit("type\x0A"); };
		F.line = 103;
		F.line = 103;
		var fmt_res_247191 = [mnewString(0)];
		F.line = 103;
		if (fmt_res_247191[0] != null) { fmt_res_247191[0] = (fmt_res_247191[0]).concat(makeNimstrLit("  ")); } else { fmt_res_247191[0] = makeNimstrLit("  "); };
		F.line = 103;
		format_value_244691(fmt_res_247191, 0, makeNimstrLit("NilType"), []);
		F.line = 103;
		if (fmt_res_247191[0] != null) { fmt_res_247191[0] = (fmt_res_247191[0]).concat(makeNimstrLit(" = ref object\x0A")); } else { fmt_res_247191[0] = makeNimstrLit(" = ref object\x0A"); };
		if (result_247190 != null) { result_247190 = (result_247190).concat(fmt_res_247191[0]); } else { result_247190 = fmt_res_247191[0].slice(); };
		F.line = 104;
		switch (self_247188.kind) {
		case 5:
			F.line = 106;
			var ret_247194 = [null];
			F.line = 107;
			obj_format_247002(self_247188, obj_name_247189, ret_247194, 0, 0);
			F.line = 108;
			if (result_247190 != null) { result_247190 = (result_247190).concat(nsuJoinSep(ret_247194[0], [])); } else { result_247190 = nsuJoinSep(ret_247194[0], []).slice(); };
			break;
		case 6:
			F.line = 110;
			F.line = 110;
			var fmt_res_247197 = [mnewString(0)];
			F.line = 110;
			if (fmt_res_247197[0] != null) { fmt_res_247197[0] = (fmt_res_247197[0]).concat(makeNimstrLit("Seq")); } else { fmt_res_247197[0] = makeNimstrLit("Seq"); };
			F.line = 110;
			format_value_244691(fmt_res_247197, 0, head_upper_247023(obj_name_247189), []);
			var seq_obj_name_247199 = nimCopy(null, fmt_res_247197[0], NTI43040);
				var Tmp1 = self_247188;
				if (ConstSet13[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
			if ((0 < ((Tmp2 = Tmp1.elems, Tmp2) != null ? Tmp2.length : 0))) {
			F.line = 112;
			var Tmp3 = self_247188;
			if (ConstSet14[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
			var child_247209 = (Tmp4 = Tmp3.elems, Tmp4)[chckIndx(0, 0, Tmp4.length+0-1)-0];
			F.line = 113;
			switch (child_247209.kind) {
			case 5:
				F.line = 115;
				F.line = 115;
				var fmt_res_247210 = [mnewString(0)];
				F.line = 115;
				if (fmt_res_247210[0] != null) { fmt_res_247210[0] = (fmt_res_247210[0]).concat(makeNimstrLit("  ")); } else { fmt_res_247210[0] = makeNimstrLit("  "); };
				F.line = 115;
				format_value_244691(fmt_res_247210, 0, seq_obj_name_247199, []);
				F.line = 115;
				if (fmt_res_247210[0] != null) { fmt_res_247210[0] = (fmt_res_247210[0]).concat(makeNimstrLit(" = seq[")); } else { fmt_res_247210[0] = makeNimstrLit(" = seq["); };
				F.line = 115;
				format_value_244691(fmt_res_247210, 0, obj_name_247189, []);
				F.line = 115;
				if (fmt_res_247210[0] != null) { fmt_res_247210[0] = (fmt_res_247210[0]).concat(makeNimstrLit("]\x0A")); } else { fmt_res_247210[0] = makeNimstrLit("]\x0A"); };
				if (result_247190 != null) { result_247190 = (result_247190).concat(fmt_res_247210[0]); } else { result_247190 = fmt_res_247210[0].slice(); };
				F.line = 116;
				var ret_247214 = [null];
				F.line = 117;
				obj_format_247002(child_247209, obj_name_247189, ret_247214, 0, 0);
				F.line = 118;
				if (result_247190 != null) { result_247190 = (result_247190).concat(nsuJoinSep(ret_247214[0], [])); } else { result_247190 = nsuJoinSep(ret_247214[0], []).slice(); };
				break;
			default: 
				F.line = 120;
				var strs_247218 = [null];
				F.line = 121;
				var t_247220 = get_type_247075(obj_name_247189, child_247209, strs_247218, 0, 0);
				F.line = 122;
				F.line = 122;
				var fmt_res_247221 = [mnewString(0)];
				F.line = 122;
				if (fmt_res_247221[0] != null) { fmt_res_247221[0] = (fmt_res_247221[0]).concat(makeNimstrLit("  ")); } else { fmt_res_247221[0] = makeNimstrLit("  "); };
				F.line = 122;
				format_value_244691(fmt_res_247221, 0, obj_name_247189, []);
				F.line = 122;
				if (fmt_res_247221[0] != null) { fmt_res_247221[0] = (fmt_res_247221[0]).concat(makeNimstrLit(" = seq[")); } else { fmt_res_247221[0] = makeNimstrLit(" = seq["); };
				F.line = 122;
				format_value_244691(fmt_res_247221, 0, t_247220, []);
				F.line = 122;
				if (fmt_res_247221[0] != null) { fmt_res_247221[0] = (fmt_res_247221[0]).concat(makeNimstrLit("]\x0A")); } else { fmt_res_247221[0] = makeNimstrLit("]\x0A"); };
				if (result_247190 != null) { result_247190 = (result_247190).concat(fmt_res_247221[0]); } else { result_247190 = fmt_res_247221[0].slice(); };
				break;
			}
			}
			
			break;
		default: 
			break;
		}
	framePtr = F.prev;

	return result_247190;

}

function get_var_type_238909(x_238911) {
	var result_238912 = 0;

	var F={procname:"json.getVarType",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 871;
		result_238912 = 0;
		F.line = 874;
		switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_238911)))) {
		case "[object Array]":
			F.line = 875;
			result_238912 = 6;
			break BeforeRet;
			break;
		case "[object Object]":
			F.line = 876;
			result_238912 = 5;
			break BeforeRet;
			break;
		case "[object Number]":
			if ((x_238911 % 1.0000000000000000e+00 == 0.0)) {
			F.line = 879;
			result_238912 = 2;
			break BeforeRet;
			}
			else {
				F.line = 881;
				result_238912 = 3;
				break BeforeRet;
			}
			
			break;
		case "[object Boolean]":
			F.line = 882;
			result_238912 = 1;
			break BeforeRet;
			break;
		case "[object Null]":
			F.line = 883;
			result_238912 = 0;
			break BeforeRet;
			break;
		case "[object String]":
			F.line = 884;
			result_238912 = 4;
			break BeforeRet;
			break;
		default: 
			if (true) {
			F.line = 885;
			failed_assert_impl_57055(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim(885, 18) `false` "));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_238912;

}

function new_jarray_221451() {
	var result_221453 = null;

	var F={procname:"json.newJArray",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 219;
		result_221453 = {kind: 6, elems: [], str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}};
	framePtr = F.prev;

	return result_221453;

}

function len_239029(x_239031) {
	var result_239032 = 0;

	var F={procname:"json.len",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_238909(x_239031) == 6))) {
		F.line = 888;
		failed_assert_impl_57055(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim(888, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 889;
		      result_239032 = x_239031.length;
    
	framePtr = F.prev;

	return result_239032;

}

function add_221785(father_221787, child_221788) {
		var Tmp1;
		var Tmp2;

	var F={procname:"json.add",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		if (!((father_221787.kind == 6))) {
		F.line = 289;
		failed_assert_impl_57055(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim(289, 10) `father.kind == JArray` "));
		}
		
		F.line = 290;
		var Tmp1 = father_221787;
		if (ConstSet15[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
		if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_221788); } else { Tmp2 = [child_221788]; };
	framePtr = F.prev;

	
}

function HEX5BHEX5D_239414(x_239416, y_239417) {
	var result_239418 = {};

	var F={procname:"json.[]",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_238909(x_239416) == 6))) {
		F.line = 900;
		failed_assert_impl_57055(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim(900, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 901;
		      result_239418 = x_239416[y_239417];
    
	framePtr = F.prev;

	return result_239418;

}

function is_power_of_two_101062(x_101064) {
		var Tmp1;

	var result_101065 = false;

	BeforeRet: do {
		if (!(0 < x_101064)) Tmp1 = false; else {			Tmp1 = ((x_101064 & (x_101064 - 1)) == 0);		}		result_101065 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_101065;

}

function init_ordered_table_221383(initialsize_221387) {
	var result_221389 = {data: null, counter: 0, first: 0, last: 0};

	var F={procname:"initOrderedTable.initOrderedTable",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_101062(initialsize_221387))) {
		F.line = 118;
		failed_assert_impl_57055(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(initialsize)` "));
		}
		
		F.line = 119;
		result_221389.counter = 0;
		F.line = 1284;
		result_221389.data = new Array(chckRange(initialsize_221387, 0, 2147483647)); for (var i=0;i<chckRange(initialsize_221387, 0, 2147483647);++i) {result_221389.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 1285;
		result_221389.first = -1;
		F.line = 1286;
		result_221389.last = -1;
	framePtr = F.prev;

	return result_221389;

}

function new_jobject_221378() {
	var result_221380 = null;

	var F={procname:"json.newJObject",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 215;
		result_221380 = {kind: 5, fields: init_ordered_table_221383(4), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
	framePtr = F.prev;

	return result_221380;

}

function HEX21HEX26_201031(h_201033, val_201034) {
	var result_201035 = 0;

	var F={procname:"hashes.!&",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 63;
		var h_201036 = (h_201033 >>> 0);
		F.line = 64;
		var val_201037 = (val_201034 >>> 0);
		F.line = 65;
		var res_201043 = ((h_201036 + val_201037) >>> 0);
		F.line = 66;
		res_201043 = ((res_201043 + (res_201043 << 10)) >>> 0);
		F.line = 67;
		res_201043 = (res_201043 ^ ((res_201043 >>> 0) >>> 6));
		F.line = 68;
		result_201035 = (res_201043|0);
	framePtr = F.prev;

	return result_201035;

}

function hash_201869(x_201871) {
	var result_201872 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 141;
		result_201872 = x_201871;
	framePtr = F.prev;

	return result_201872;

}

function HEX21HEX24_201081(h_201083) {
	var result_201084 = 0;

	var F={procname:"hashes.!$",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 74;
		var h_201085 = (h_201083 >>> 0);
		F.line = 75;
		var res_201098 = ((h_201085 + (h_201085 << 3)) >>> 0);
		F.line = 76;
		res_201098 = (res_201098 ^ ((res_201098 >>> 0) >>> 11));
		F.line = 77;
		res_201098 = ((res_201098 + (res_201098 << 15)) >>> 0);
		F.line = 78;
		result_201084 = (res_201098|0);
	framePtr = F.prev;

	return result_201084;

}

function hash_201968(x_201970) {
	var result_201971 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 159;
		var element_size_201973 = 1;
		F.line = 160;
		var step_size_201974 = divInt(4, element_size_201973);
		F.line = 161;
		var i_201975 = 0;
		L1: do {
			F.line = 162;
				L2: while (true) {
				if (!(i_201975 <= subInt(addInt((x_201970 != null ? (x_201970.length-1) : -1), 1), step_size_201974))) break L2;
					F.line = 163;
					var n_201976 = 0;
					F.line = 169;
					n_201976 = x_201970[chckIndx(i_201975, 0, x_201970.length+0-1)-0];
					F.line = 170;
					result_201971 = HEX21HEX26_201031(result_201971, n_201976);
					F.line = 171;
					i_201975 = addInt(i_201975, step_size_201974);
				}
		} while(false);
		L3: do {
			F.line = 153;
			var i_202207 = 0;
			F.line = 2610;
			var colontmp__248160 = 0;
			F.line = 183;
			colontmp__248160 = (x_201970 != null ? (x_201970.length-1) : -1);
			F.line = 2620;
			var res_248161 = i_201975;
			L4: do {
				F.line = 2621;
					L5: while (true) {
					if (!(res_248161 <= colontmp__248160)) break L5;
						F.line = 153;
						i_202207 = res_248161;
						F.line = 154;
						result_201971 = HEX21HEX26_201031(result_201971, hash_201869(x_201970[chckIndx(i_202207, 0, x_201970.length+0-1)-0]));
						F.line = 2623;
						res_248161 = addInt(res_248161, 1);
					}
			} while(false);
		} while(false);
		F.line = 155;
		result_201971 = HEX21HEX24_201081(result_201971);
	framePtr = F.prev;

	return result_201971;

}

function next_try_205435(h_205437, max_hash_205438) {
	var result_205439 = 0;

	var F={procname:"tables.nextTry",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/hashcommon.nim",line:0};
	framePtr = F;
		F.line = 30;
		result_205439 = (addInt(h_205437, 1) & max_hash_205438);
	framePtr = F.prev;

	return result_205439;

}

function raw_get_222428(t_222433, key_222434, hc_222435, hc_222435_Idx) {
						var Tmp3;

	var result_222436 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_222435[hc_222435_Idx] = hash_201968(key_222434);
		if ((hc_222435[hc_222435_Idx] == 0)) {
		F.line = 56;
		hc_222435[hc_222435_Idx] = 314159265;
		}
		
		if (((t_222433.data != null ? t_222433.data.length : 0) == 0)) {
		F.line = 38;
		result_222436 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_222578 = (hc_222435[hc_222435_Idx] & (t_222433.data != null ? (t_222433.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_205418(t_222433.data[chckIndx(h_222578, 0, t_222433.data.length+0-1)-0].Field0)) break L2;
						if (!(t_222433.data[chckIndx(h_222578, 0, t_222433.data.length+0-1)-0].Field0 == hc_222435[hc_222435_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_222433.data[chckIndx(h_222578, 0, t_222433.data.length+0-1)-0].Field2, key_222434);						}					if (Tmp3) {
					F.line = 46;
					result_222436 = h_222578;
					break BeforeRet;
					}
					
					F.line = 47;
					h_222578 = next_try_205435(h_222578, (t_222433.data != null ? (t_222433.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_222436 = subInt(-1, h_222578);
	} while (false);
	framePtr = F.prev;

	return result_222436;

}

function must_rehash_205453(length_205455, counter_205456) {
	var result_205457 = false;

	var F={procname:"tables.mustRehash",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/hashcommon.nim",line:0};
	framePtr = F;
		if (!((counter_205456 < length_205455))) {
		F.line = 33;
		failed_assert_impl_57055(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/hashcommon.nim(33, 9) `length > counter` "));
		}
		
		F.line = 34;
		result_205457 = ((mulInt(length_205455, 2) < mulInt(counter_205456, 3)) || (subInt(length_205455, counter_205456) < 4));
	framePtr = F.prev;

	return result_205457;

}

function raw_insert_224672(t_224678, data_224681, data_224681_Idx, key_224682, val_224683, hc_224684, h_224685) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 22;
		data_224681[data_224681_Idx][chckIndx(h_224685, 0, data_224681[data_224681_Idx].length+0-1)-0].Field2 = nimCopy(null, key_224682, NTI43040);
		F.line = 23;
		data_224681[data_224681_Idx][chckIndx(h_224685, 0, data_224681[data_224681_Idx].length+0-1)-0].Field3 = val_224683;
		F.line = 24;
		data_224681[data_224681_Idx][chckIndx(h_224685, 0, data_224681[data_224681_Idx].length+0-1)-0].Field0 = hc_224684;
		F.line = 1233;
		data_224681[data_224681_Idx][chckIndx(h_224685, 0, data_224681[data_224681_Idx].length+0-1)-0].Field1 = -1;
		if ((t_224678.first < 0)) {
		F.line = 1234;
		t_224678.first = h_224685;
		}
		
		if ((0 <= t_224678.last)) {
		F.line = 1235;
		data_224681[data_224681_Idx][chckIndx(t_224678.last, 0, data_224681[data_224681_Idx].length+0-1)-0].Field1 = h_224685;
		}
		
		F.line = 1236;
		t_224678.last = h_224685;
	framePtr = F.prev;

	
}

function enlarge_223574(t_223580) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 1239;
		var n_223588 = null;
		F.line = 1240;
		n_223588 = new Array(chckRange(mulInt((t_223580.data != null ? t_223580.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_223580.data != null ? t_223580.data.length : 0), 2), 0, 2147483647);++i) {n_223588[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 1241;
		var h_223727 = t_223580.first;
		F.line = 1242;
		t_223580.first = -1;
		F.line = 1243;
		t_223580.last = -1;
		F.line = 1244;
		var Tmp1 = t_223580.data; t_223580.data = n_223588; n_223588 = Tmp1;		L2: do {
			F.line = 1245;
				L3: while (true) {
				if (!(0 <= h_223727)) break L3;
					F.line = 1246;
					var nxt_223886 = n_223588[chckIndx(h_223727, 0, n_223588.length+0-1)-0].Field1;
					F.line = 1247;
					var eh_224035 = n_223588[chckIndx(h_223727, 0, n_223588.length+0-1)-0].Field0;
					if (is_filled_205418(eh_224035)) {
					F.line = 1249;
					var j_224042 = (eh_224035 & (t_223580.data != null ? (t_223580.data.length-1) : -1));
					L4: do {
						F.line = 1250;
							L5: while (true) {
							if (!is_filled_205418(t_223580.data[chckIndx(j_224042, 0, t_223580.data.length+0-1)-0].Field0)) break L5;
								F.line = 1251;
								j_224042 = next_try_205435(j_224042, (t_223580.data != null ? (t_223580.data.length-1) : -1));
							}
					} while(false);
					F.line = 1252;
					raw_insert_224672(t_223580, t_223580, "data", n_223588[chckIndx(h_223727, 0, n_223588.length+0-1)-0].Field2, n_223588[chckIndx(h_223727, 0, n_223588.length+0-1)-0].Field3, n_223588[chckIndx(h_223727, 0, n_223588.length+0-1)-0].Field0, j_224042);
					}
					
					F.line = 1253;
					h_223727 = nxt_223886;
				}
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_225489(t_225494, key_225495, hc_225496) {
	var result_225497 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((t_225494.data != null ? t_225494.data.length : 0) == 0)) {
		F.line = 38;
		result_225497 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_225636 = (hc_225496 & (t_225494.data != null ? (t_225494.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_205418(t_225494.data[chckIndx(h_225636, 0, t_225494.data.length+0-1)-0].Field0)) break L2;
					if (((t_225494.data[chckIndx(h_225636, 0, t_225494.data.length+0-1)-0].Field0 == hc_225496) && eqStrings(t_225494.data[chckIndx(h_225636, 0, t_225494.data.length+0-1)-0].Field2, key_225495))) {
					F.line = 46;
					result_225497 = h_225636;
					break BeforeRet;
					}
					
					F.line = 47;
					h_225636 = next_try_205435(h_225636, (t_225494.data != null ? (t_225494.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_225497 = subInt(-1, h_225636);
	} while (false);
	framePtr = F.prev;

	return result_225497;

}

function HEX5BHEX5DHEX3D_222111(t_222117, key_222118, val_222119) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		if (((t_222117.data != null ? t_222117.data.length : 0) == 0)) {
		if (!(is_power_of_two_101062(64))) {
		F.line = 118;
		failed_assert_impl_57055(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		F.line = 119;
		t_222117.counter = 0;
		F.line = 54;
		t_222117.data = new Array(64); for (var i=0;i<64;++i) {t_222117.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		}
		
		F.line = 55;
		var hc_222408 = [0];
		F.line = 56;
		var index_223046 = raw_get_222428(t_222117, key_222118, hc_222408, 0);
		if ((0 <= index_223046)) {
		F.line = 57;
		t_222117.data[chckIndx(index_223046, 0, t_222117.data.length+0-1)-0].Field3 = val_222119;
		}
		else {
			if (((t_222117.data != null ? t_222117.data.length : 0) == 0)) {
			if (!(is_power_of_two_101062(64))) {
			F.line = 118;
			failed_assert_impl_57055(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			F.line = 119;
			t_222117.counter = 0;
			F.line = 44;
			t_222117.data = new Array(64); for (var i=0;i<64;++i) {t_222117.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			}
			
			if (must_rehash_205453((t_222117.data != null ? t_222117.data.length : 0), t_222117.counter)) {
			F.line = 46;
			enlarge_223574(t_222117);
			F.line = 47;
			index_223046 = raw_get_known_hc_225489(t_222117, key_222118, hc_222408[0]);
			}
			
			F.line = 48;
			index_223046 = subInt(-1, index_223046);
			F.line = 49;
			raw_insert_224672(t_222117, t_222117, "data", key_222118, val_222119, hc_222408[0], index_223046);
			F.line = 58;
			t_222117.counter = addInt(t_222117.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_226614(obj_226616, key_226617, val_226618) {
		var Tmp1;

	var F={procname:"json.[]=",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		if (!((obj_226616.kind == 5))) {
		F.line = 363;
		failed_assert_impl_57055(makeNimstrLit("/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim(363, 9) `obj.kind == JObject` "));
		}
		
		F.line = 364;
		var Tmp1 = obj_226616;
		if (ConstSet16[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
		HEX5BHEX5DHEX3D_222111(Tmp1.fields, key_226617, val_226618);
	framePtr = F.prev;

	
}

function new_jint_221311(n_221313) {
	var result_221314 = null;

	var F={procname:"json.newJInt",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 199;
		result_221314 = {kind: 2, num: n_221313, str: null, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_221314;

}

function new_jfloat_221328(n_221330) {
	var result_221331 = null;

	var F={procname:"json.newJFloat",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 203;
		result_221331 = {kind: 3, fnum: n_221330, str: null, num: 0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_221331;

}

function new_jstring_221261(s_221263) {
	var result_221264 = null;

	var F={procname:"json.newJString",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 191;
		result_221264 = {kind: 4, str: nimCopy(null, s_221263, NTI43040), num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_221264;

}

function new_jbool_221345(b_221347) {
	var result_221348 = null;

	var F={procname:"json.newJBool",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 207;
		result_221348 = {kind: 1, bval: b_221347, str: null, num: 0, fnum: 0.0, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_221348;

}

function new_jnull_221362() {
	var result_221364 = null;

	var F={procname:"json.newJNull",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 211;
		result_221364 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_221364;

}

function convert_object_239614(x_239616) {
	var result_239617 = null;

	var F={procname:"json.convertObject",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 906;
		switch (get_var_type_238909(x_239616)) {
		case 6:
			F.line = 908;
			result_239617 = new_jarray_221451();
			L1: do {
				F.line = 909;
				var i_239624 = 0;
				F.line = 2647;
				var colontmp__248138 = 0;
				F.line = 909;
				colontmp__248138 = len_239029(x_239616);
				F.line = 2648;
				var i_248139 = 0;
				L2: do {
					F.line = 2649;
						L3: while (true) {
						if (!(i_248139 < colontmp__248138)) break L3;
							F.line = 909;
							i_239624 = i_248139;
							F.line = 910;
							add_221785(result_239617, convert_object_239614(HEX5BHEX5D_239414(x_239616, i_239624)));
							F.line = 2651;
							i_248139 = addInt(i_248139, 1);
						}
				} while(false);
			} while(false);
			break;
		case 5:
			F.line = 912;
			result_239617 = new_jobject_221378();
			F.line = 913;
			for (var property in x_239616) {
        if (x_239616.hasOwnProperty(property)) {
      
			F.line = 916;
			var nim_property_239626 = null;
			F.line = 917;
			var nim_value_239627 = {};
			F.line = 918;
			nim_property_239626 = property; nim_value_239627 = x_239616[property];
			F.line = 919;
			HEX5BHEX5DHEX3D_226614(result_239617, cstrToNimstr(nim_property_239626), convert_object_239614(nim_value_239627));
			F.line = 920;
			}}
			break;
		case 2:
			F.line = 922;
			result_239617 = new_jint_221311(x_239616);
			break;
		case 3:
			F.line = 924;
			result_239617 = new_jfloat_221328(x_239616);
			break;
		case 4:
			F.line = 926;
			result_239617 = new_jstring_221261(cstrToNimstr(x_239616));
			break;
		case 1:
			F.line = 928;
			result_239617 = new_jbool_221345(x_239616);
			break;
		case 0:
			F.line = 930;
			result_239617 = new_jnull_221362();
			break;
		}
	framePtr = F.prev;

	return result_239617;

}

function parse_json_239656(buffer_239658) {
	var result_239659 = null;

	var F={procname:"json.parseJson",prev:framePtr,filename:"/home/jiro4989/.choosenim/toolchains/nim-0.20.0/lib/pure/json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 933;
		result_239659 = convert_object_239614(JSON.parse(toJSStr(buffer_239658)));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_239659;

}

function generateNimDefinitions(str_248029) {
	var result_248030 = null;

	var F={procname:"nimjson_js.generateNimDefinitions",prev:framePtr,filename:"/home/jiro4989/src/github.com/jiro4989/nimjson/js/nimjson_js.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 5;
		result_248030 = toJSStr(to_type_string_247186(parse_json_239656(cstrToNimstr(str_248029)), makeNimstrLit("Object")));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_248030;

}
